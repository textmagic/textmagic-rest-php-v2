<?php
/**
 * GetStateResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  TextMagic
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Textmagic API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.43
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace TextMagic\Models;

use \ArrayAccess;
use \TextMagic\ObjectSerializer;

/**
 * GetStateResponse Class Doc Comment
 *
 * @category Class
 * @package  TextMagic
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class GetStateResponse implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'GetStateResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'systemCacheClear' => 'int',
        'systemExit' => 'int',
        'systemAlert' => 'int',
        'systemAccountStateChanged' => 'int',
        'systemAccountAcceptTermsUpdate' => 'int',
        'systemAccountClosed' => 'int',
        'systemAccountAdditionalFields' => 'int',
        'systemAccountPermissionsChanged' => 'int',
        'userProfileChanged' => 'int',
        'userBalanceChanged' => 'int',
        'userImpersonationEnd' => 'int',
        'messageDeleted' => 'int',
        'messageIncoming' => 'int',
        'messageIncomingDeleted' => 'int',
        'messageStateChanged' => 'int',
        'messageBulkEnd' => 'int',
        'messageWipeEnd' => 'int',
        'messageSent' => 'int',
        'messageLog' => 'int',
        'messageNote' => 'int',
        'messageInitial' => 'int',
        'lastMessageSet' => 'int',
        'messageSessionDeleted' => 'int',
        'messageCacheClear' => 'int',
        'messageIncomingCacheClear' => 'int',
        'messageScheduleAdded' => 'int',
        'messageScheduleStateChanged' => 'int',
        'messageScheduleDeleted' => 'int',
        'messageScheduleNotSentStateChanged' => 'int',
        'messageScheduleCacheClear' => 'int',
        'messageTemplateCacheClear' => 'int',
        'callFinished' => 'int',
        'chatCreated' => 'int',
        'chatMarkedAsRead' => 'int',
        'chatMuted' => 'int',
        'chatUnmuted' => 'int',
        'chatPinned' => 'int',
        'chatUnpinned' => 'int',
        'chatDeleted' => 'int',
        'chatClosed' => 'int',
        'chatReopened' => 'int',
        'chatActivated' => 'int',
        'chatCacheClear' => 'int',
        'chatRead' => 'int',
        'chatUnread' => 'int',
        'chatAssigneeChanged' => 'int',
        'chatTagsChanged' => 'int',
        'chatConversationEnded' => 'int',
        'chatUpdated' => 'int',
        'liveChatAgentChanged' => 'int',
        'liveChatRated' => 'int',
        'webWidgetUpdated' => 'int',
        'webWidgetDeleted' => 'int',
        'contactAdded' => 'int',
        'contactDeleted' => 'int',
        'contactStateChanged' => 'int',
        'contactUnsubscribed' => 'int',
        'contactResubscribed' => 'int',
        'contactNoteAdded' => 'int',
        'contactNoteDeleted' => 'int',
        'contactNoteStateChanged' => 'int',
        'listAdded' => 'int',
        'listDeleted' => 'int',
        'listStateChanged' => 'int',
        'listCountMembersUpdated' => 'int',
        'contactWipeEnd' => 'int',
        'contactImportEnd' => 'int',
        'contactCacheClear' => 'int',
        'listCacheClear' => 'int',
        'customFieldsCacheClear' => 'int',
        'progressCarrierBulkLookup' => 'int',
        'progressEmailBulkLookup' => 'int',
        'progressSubAccountBulkImport' => 'int',
        'progressContactBulkImport' => 'int',
        'forceRefreshWebApp' => 'int',
        'chatSenderSettingsChanged' => 'int',
        'countrySenderSettingsChanged' => 'int',
        'chatSummaryChunk' => 'int',
        'chatWaysToReplyChunk' => 'int',
        'chatSuggestedReplyChunk' => 'int',
        'userSubscriptionChanged' => 'int',
        'userSubscriptionDeleted' => 'int',
        'taskCreated' => 'int',
        'taskUpdated' => 'int',
        'taskReordered' => 'int',
        'taskDeleted' => 'int',
        'taskMovedAll' => 'int',
        'taskStageCreated' => 'int',
        'taskStageUpdated' => 'int',
        'taskStageDeleted' => 'int',
        'taskBoardCreated' => 'int',
        'taskBoardUpdated' => 'int',
        'taskBoardReordered' => 'int',
        'taskBoardDeleted' => 'int',
        'taskBoardArchived' => 'int',
        'taskChecklistCreated' => 'int',
        'taskChecklistUpdated' => 'int',
        'taskChecklistDeleted' => 'int',
        'taskChecklistBulkMarked' => 'int',
        'taskChecklistItemCreated' => 'int',
        'taskChecklistItemUpdated' => 'int',
        'taskChecklistItemDeleted' => 'int',
        'taskCommentCreated' => 'int',
        'taskCommentDeleted' => 'int',
        'pinnedContactAdded' => 'int',
        'pinnedContactRemoved' => 'int',
        'pinnedContactReordered' => 'int',
        'pinnedContactStateChanged' => 'int',
        'whatsappAccountAdded' => 'int',
        'whatsappAccountRemoved' => 'int',
        'whatsappAccountChanged' => 'int',
        'facebookPageAdded' => 'int',
        'facebookPageRemoved' => 'int',
        'facebookPageChanged' => 'int',
        'instagramAccountAdded' => 'int',
        'instagramAccountRemoved' => 'int',
        'instagramAccountChanged' => 'int',
        'unreadTicketsCountUpdated' => 'int',
        'ticketDeleted' => 'int',
        'ticketUpdated' => 'int',
        'ticketCreated' => 'int',
        'ticketBulkUpdated' => 'int',
        'ticketBulkDeleted' => 'int',
        'ticketMessageCreated' => 'int',
        'ticketMessageUpdated' => 'int',
        'ticketMessageDeleted' => 'int',
        'subAccountsClosed' => 'int',
        'userInvited' => 'int',
        'filteredViewCreated' => 'int',
        'filteredViewCountUpdated' => 'int',
        'filteredViewDeleted' => 'int',
        'forwardingInboxWasVerified' => 'int',
        'forwardingInboxCheckWasFailed' => 'int',
        'forwardingInboxVerificationLinkWasParsed' => 'int',
        'tendlcLinkNumberStatusUpdated' => 'int',
        'channelPresence' => 'int',
        'dealCreated' => 'int',
        'dealUpdated' => 'int',
        'dealDeleted' => 'int',
        'dealMoved' => 'int',
        'dealStageCreated' => 'int',
        'dealStageUpdated' => 'int',
        'dealStageDeleted' => 'int',
        'dealPipelineCreated' => 'int',
        'dealPipelineUpdated' => 'int',
        'dealPipelineDeleted' => 'int',
        'dealPipelineArchived' => 'int',
        'dealPipelineReordered' => 'int',
        'dealActivityUpdated' => 'int',
        'dealActivityItemCreated' => 'int',
        'dealActivityItemUpdated' => 'int',
        'dealActivityItemDeleted' => 'int',
        'dealActivityItemBulkMarked' => 'int',
        'dealTimelineItemDeleted' => 'int',
        'dealTimelineItemCreated' => 'int',
        'aIAssistantCreated' => 'int',
        'aIAssistantState' => 'int',
        'aIAssistantDeleted' => 'int',
        'aIAssistantLinkDeleted' => 'int',
        'aIAssistantLinkState' => 'int',
        'aIAssistantLinkCreated' => 'int',
        'aIAssistantSubLinkState' => 'int',
        'aIAssistantSubLinkCreated' => 'int',
        'emailCampaignEmailSenderCreated' => 'int',
        'emailCampaignEmailSenderUpdated' => 'int',
        'emailCampaignEmailSenderDeleted' => 'int',
        'emailCampaignEmailSenderVerified' => 'int',
        'emailCampaignDomainCreated' => 'int',
        'emailCampaignDomainDeleted' => 'int',
        'emailCampaignDomainVerified' => 'int',
        'emailCampaignDomainDkimVerified' => 'int',
        'emailCampaignDomainReturnPathVerified' => 'int',
        'emailCampaignBulkProcessProgress' => 'int',
        'smsCampaignInvalidated' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'systemCacheClear' => null,
        'systemExit' => null,
        'systemAlert' => null,
        'systemAccountStateChanged' => null,
        'systemAccountAcceptTermsUpdate' => null,
        'systemAccountClosed' => null,
        'systemAccountAdditionalFields' => null,
        'systemAccountPermissionsChanged' => null,
        'userProfileChanged' => null,
        'userBalanceChanged' => null,
        'userImpersonationEnd' => null,
        'messageDeleted' => null,
        'messageIncoming' => null,
        'messageIncomingDeleted' => null,
        'messageStateChanged' => null,
        'messageBulkEnd' => null,
        'messageWipeEnd' => null,
        'messageSent' => null,
        'messageLog' => null,
        'messageNote' => null,
        'messageInitial' => null,
        'lastMessageSet' => null,
        'messageSessionDeleted' => null,
        'messageCacheClear' => null,
        'messageIncomingCacheClear' => null,
        'messageScheduleAdded' => null,
        'messageScheduleStateChanged' => null,
        'messageScheduleDeleted' => null,
        'messageScheduleNotSentStateChanged' => null,
        'messageScheduleCacheClear' => null,
        'messageTemplateCacheClear' => null,
        'callFinished' => null,
        'chatCreated' => null,
        'chatMarkedAsRead' => null,
        'chatMuted' => null,
        'chatUnmuted' => null,
        'chatPinned' => null,
        'chatUnpinned' => null,
        'chatDeleted' => null,
        'chatClosed' => null,
        'chatReopened' => null,
        'chatActivated' => null,
        'chatCacheClear' => null,
        'chatRead' => null,
        'chatUnread' => null,
        'chatAssigneeChanged' => null,
        'chatTagsChanged' => null,
        'chatConversationEnded' => null,
        'chatUpdated' => null,
        'liveChatAgentChanged' => null,
        'liveChatRated' => null,
        'webWidgetUpdated' => null,
        'webWidgetDeleted' => null,
        'contactAdded' => null,
        'contactDeleted' => null,
        'contactStateChanged' => null,
        'contactUnsubscribed' => null,
        'contactResubscribed' => null,
        'contactNoteAdded' => null,
        'contactNoteDeleted' => null,
        'contactNoteStateChanged' => null,
        'listAdded' => null,
        'listDeleted' => null,
        'listStateChanged' => null,
        'listCountMembersUpdated' => null,
        'contactWipeEnd' => null,
        'contactImportEnd' => null,
        'contactCacheClear' => null,
        'listCacheClear' => null,
        'customFieldsCacheClear' => null,
        'progressCarrierBulkLookup' => null,
        'progressEmailBulkLookup' => null,
        'progressSubAccountBulkImport' => null,
        'progressContactBulkImport' => null,
        'forceRefreshWebApp' => null,
        'chatSenderSettingsChanged' => null,
        'countrySenderSettingsChanged' => null,
        'chatSummaryChunk' => null,
        'chatWaysToReplyChunk' => null,
        'chatSuggestedReplyChunk' => null,
        'userSubscriptionChanged' => null,
        'userSubscriptionDeleted' => null,
        'taskCreated' => null,
        'taskUpdated' => null,
        'taskReordered' => null,
        'taskDeleted' => null,
        'taskMovedAll' => null,
        'taskStageCreated' => null,
        'taskStageUpdated' => null,
        'taskStageDeleted' => null,
        'taskBoardCreated' => null,
        'taskBoardUpdated' => null,
        'taskBoardReordered' => null,
        'taskBoardDeleted' => null,
        'taskBoardArchived' => null,
        'taskChecklistCreated' => null,
        'taskChecklistUpdated' => null,
        'taskChecklistDeleted' => null,
        'taskChecklistBulkMarked' => null,
        'taskChecklistItemCreated' => null,
        'taskChecklistItemUpdated' => null,
        'taskChecklistItemDeleted' => null,
        'taskCommentCreated' => null,
        'taskCommentDeleted' => null,
        'pinnedContactAdded' => null,
        'pinnedContactRemoved' => null,
        'pinnedContactReordered' => null,
        'pinnedContactStateChanged' => null,
        'whatsappAccountAdded' => null,
        'whatsappAccountRemoved' => null,
        'whatsappAccountChanged' => null,
        'facebookPageAdded' => null,
        'facebookPageRemoved' => null,
        'facebookPageChanged' => null,
        'instagramAccountAdded' => null,
        'instagramAccountRemoved' => null,
        'instagramAccountChanged' => null,
        'unreadTicketsCountUpdated' => null,
        'ticketDeleted' => null,
        'ticketUpdated' => null,
        'ticketCreated' => null,
        'ticketBulkUpdated' => null,
        'ticketBulkDeleted' => null,
        'ticketMessageCreated' => null,
        'ticketMessageUpdated' => null,
        'ticketMessageDeleted' => null,
        'subAccountsClosed' => null,
        'userInvited' => null,
        'filteredViewCreated' => null,
        'filteredViewCountUpdated' => null,
        'filteredViewDeleted' => null,
        'forwardingInboxWasVerified' => null,
        'forwardingInboxCheckWasFailed' => null,
        'forwardingInboxVerificationLinkWasParsed' => null,
        'tendlcLinkNumberStatusUpdated' => null,
        'channelPresence' => null,
        'dealCreated' => null,
        'dealUpdated' => null,
        'dealDeleted' => null,
        'dealMoved' => null,
        'dealStageCreated' => null,
        'dealStageUpdated' => null,
        'dealStageDeleted' => null,
        'dealPipelineCreated' => null,
        'dealPipelineUpdated' => null,
        'dealPipelineDeleted' => null,
        'dealPipelineArchived' => null,
        'dealPipelineReordered' => null,
        'dealActivityUpdated' => null,
        'dealActivityItemCreated' => null,
        'dealActivityItemUpdated' => null,
        'dealActivityItemDeleted' => null,
        'dealActivityItemBulkMarked' => null,
        'dealTimelineItemDeleted' => null,
        'dealTimelineItemCreated' => null,
        'aIAssistantCreated' => null,
        'aIAssistantState' => null,
        'aIAssistantDeleted' => null,
        'aIAssistantLinkDeleted' => null,
        'aIAssistantLinkState' => null,
        'aIAssistantLinkCreated' => null,
        'aIAssistantSubLinkState' => null,
        'aIAssistantSubLinkCreated' => null,
        'emailCampaignEmailSenderCreated' => null,
        'emailCampaignEmailSenderUpdated' => null,
        'emailCampaignEmailSenderDeleted' => null,
        'emailCampaignEmailSenderVerified' => null,
        'emailCampaignDomainCreated' => null,
        'emailCampaignDomainDeleted' => null,
        'emailCampaignDomainVerified' => null,
        'emailCampaignDomainDkimVerified' => null,
        'emailCampaignDomainReturnPathVerified' => null,
        'emailCampaignBulkProcessProgress' => null,
        'smsCampaignInvalidated' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'systemCacheClear' => 'systemCacheClear',
        'systemExit' => 'systemExit',
        'systemAlert' => 'systemAlert',
        'systemAccountStateChanged' => 'systemAccountStateChanged',
        'systemAccountAcceptTermsUpdate' => 'systemAccountAcceptTermsUpdate',
        'systemAccountClosed' => 'systemAccountClosed',
        'systemAccountAdditionalFields' => 'systemAccountAdditionalFields',
        'systemAccountPermissionsChanged' => 'systemAccountPermissionsChanged',
        'userProfileChanged' => 'userProfileChanged',
        'userBalanceChanged' => 'userBalanceChanged',
        'userImpersonationEnd' => 'userImpersonationEnd',
        'messageDeleted' => 'messageDeleted',
        'messageIncoming' => 'messageIncoming',
        'messageIncomingDeleted' => 'messageIncomingDeleted',
        'messageStateChanged' => 'messageStateChanged',
        'messageBulkEnd' => 'messageBulkEnd',
        'messageWipeEnd' => 'messageWipeEnd',
        'messageSent' => 'messageSent',
        'messageLog' => 'messageLog',
        'messageNote' => 'messageNote',
        'messageInitial' => 'messageInitial',
        'lastMessageSet' => 'lastMessageSet',
        'messageSessionDeleted' => 'messageSessionDeleted',
        'messageCacheClear' => 'messageCacheClear',
        'messageIncomingCacheClear' => 'messageIncomingCacheClear',
        'messageScheduleAdded' => 'messageScheduleAdded',
        'messageScheduleStateChanged' => 'messageScheduleStateChanged',
        'messageScheduleDeleted' => 'messageScheduleDeleted',
        'messageScheduleNotSentStateChanged' => 'messageScheduleNotSentStateChanged',
        'messageScheduleCacheClear' => 'messageScheduleCacheClear',
        'messageTemplateCacheClear' => 'messageTemplateCacheClear',
        'callFinished' => 'callFinished',
        'chatCreated' => 'chatCreated',
        'chatMarkedAsRead' => 'chatMarkedAsRead',
        'chatMuted' => 'chatMuted',
        'chatUnmuted' => 'chatUnmuted',
        'chatPinned' => 'chatPinned',
        'chatUnpinned' => 'chatUnpinned',
        'chatDeleted' => 'chatDeleted',
        'chatClosed' => 'chatClosed',
        'chatReopened' => 'chatReopened',
        'chatActivated' => 'chatActivated',
        'chatCacheClear' => 'chatCacheClear',
        'chatRead' => 'chatRead',
        'chatUnread' => 'chatUnread',
        'chatAssigneeChanged' => 'chatAssigneeChanged',
        'chatTagsChanged' => 'chatTagsChanged',
        'chatConversationEnded' => 'chatConversationEnded',
        'chatUpdated' => 'chatUpdated',
        'liveChatAgentChanged' => 'liveChatAgentChanged',
        'liveChatRated' => 'liveChatRated',
        'webWidgetUpdated' => 'webWidgetUpdated',
        'webWidgetDeleted' => 'webWidgetDeleted',
        'contactAdded' => 'contactAdded',
        'contactDeleted' => 'contactDeleted',
        'contactStateChanged' => 'contactStateChanged',
        'contactUnsubscribed' => 'contactUnsubscribed',
        'contactResubscribed' => 'contactResubscribed',
        'contactNoteAdded' => 'contactNoteAdded',
        'contactNoteDeleted' => 'contactNoteDeleted',
        'contactNoteStateChanged' => 'contactNoteStateChanged',
        'listAdded' => 'listAdded',
        'listDeleted' => 'listDeleted',
        'listStateChanged' => 'listStateChanged',
        'listCountMembersUpdated' => 'listCountMembersUpdated',
        'contactWipeEnd' => 'contactWipeEnd',
        'contactImportEnd' => 'contactImportEnd',
        'contactCacheClear' => 'contactCacheClear',
        'listCacheClear' => 'listCacheClear',
        'customFieldsCacheClear' => 'customFieldsCacheClear',
        'progressCarrierBulkLookup' => 'progressCarrierBulkLookup',
        'progressEmailBulkLookup' => 'progressEmailBulkLookup',
        'progressSubAccountBulkImport' => 'progressSubAccountBulkImport',
        'progressContactBulkImport' => 'progressContactBulkImport',
        'forceRefreshWebApp' => 'forceRefreshWebApp',
        'chatSenderSettingsChanged' => 'chatSenderSettingsChanged',
        'countrySenderSettingsChanged' => 'countrySenderSettingsChanged',
        'chatSummaryChunk' => 'chatSummaryChunk',
        'chatWaysToReplyChunk' => 'chatWaysToReplyChunk',
        'chatSuggestedReplyChunk' => 'chatSuggestedReplyChunk',
        'userSubscriptionChanged' => 'userSubscriptionChanged',
        'userSubscriptionDeleted' => 'userSubscriptionDeleted',
        'taskCreated' => 'taskCreated',
        'taskUpdated' => 'taskUpdated',
        'taskReordered' => 'taskReordered',
        'taskDeleted' => 'taskDeleted',
        'taskMovedAll' => 'taskMovedAll',
        'taskStageCreated' => 'taskStageCreated',
        'taskStageUpdated' => 'taskStageUpdated',
        'taskStageDeleted' => 'taskStageDeleted',
        'taskBoardCreated' => 'taskBoardCreated',
        'taskBoardUpdated' => 'taskBoardUpdated',
        'taskBoardReordered' => 'taskBoardReordered',
        'taskBoardDeleted' => 'taskBoardDeleted',
        'taskBoardArchived' => 'taskBoardArchived',
        'taskChecklistCreated' => 'taskChecklistCreated',
        'taskChecklistUpdated' => 'taskChecklistUpdated',
        'taskChecklistDeleted' => 'taskChecklistDeleted',
        'taskChecklistBulkMarked' => 'taskChecklistBulkMarked',
        'taskChecklistItemCreated' => 'taskChecklistItemCreated',
        'taskChecklistItemUpdated' => 'taskChecklistItemUpdated',
        'taskChecklistItemDeleted' => 'taskChecklistItemDeleted',
        'taskCommentCreated' => 'taskCommentCreated',
        'taskCommentDeleted' => 'taskCommentDeleted',
        'pinnedContactAdded' => 'pinnedContactAdded',
        'pinnedContactRemoved' => 'pinnedContactRemoved',
        'pinnedContactReordered' => 'pinnedContactReordered',
        'pinnedContactStateChanged' => 'pinnedContactStateChanged',
        'whatsappAccountAdded' => 'whatsappAccountAdded',
        'whatsappAccountRemoved' => 'whatsappAccountRemoved',
        'whatsappAccountChanged' => 'whatsappAccountChanged',
        'facebookPageAdded' => 'facebookPageAdded',
        'facebookPageRemoved' => 'facebookPageRemoved',
        'facebookPageChanged' => 'facebookPageChanged',
        'instagramAccountAdded' => 'instagramAccountAdded',
        'instagramAccountRemoved' => 'instagramAccountRemoved',
        'instagramAccountChanged' => 'instagramAccountChanged',
        'unreadTicketsCountUpdated' => 'unreadTicketsCountUpdated',
        'ticketDeleted' => 'ticketDeleted',
        'ticketUpdated' => 'ticketUpdated',
        'ticketCreated' => 'ticketCreated',
        'ticketBulkUpdated' => 'ticketBulkUpdated',
        'ticketBulkDeleted' => 'ticketBulkDeleted',
        'ticketMessageCreated' => 'ticketMessageCreated',
        'ticketMessageUpdated' => 'ticketMessageUpdated',
        'ticketMessageDeleted' => 'ticketMessageDeleted',
        'subAccountsClosed' => 'subAccountsClosed',
        'userInvited' => 'userInvited',
        'filteredViewCreated' => 'filteredViewCreated',
        'filteredViewCountUpdated' => 'filteredViewCountUpdated',
        'filteredViewDeleted' => 'filteredViewDeleted',
        'forwardingInboxWasVerified' => 'forwardingInboxWasVerified',
        'forwardingInboxCheckWasFailed' => 'forwardingInboxCheckWasFailed',
        'forwardingInboxVerificationLinkWasParsed' => 'forwardingInboxVerificationLinkWasParsed',
        'tendlcLinkNumberStatusUpdated' => 'tendlcLinkNumberStatusUpdated',
        'channelPresence' => 'channelPresence',
        'dealCreated' => 'dealCreated',
        'dealUpdated' => 'dealUpdated',
        'dealDeleted' => 'dealDeleted',
        'dealMoved' => 'dealMoved',
        'dealStageCreated' => 'dealStageCreated',
        'dealStageUpdated' => 'dealStageUpdated',
        'dealStageDeleted' => 'dealStageDeleted',
        'dealPipelineCreated' => 'dealPipelineCreated',
        'dealPipelineUpdated' => 'dealPipelineUpdated',
        'dealPipelineDeleted' => 'dealPipelineDeleted',
        'dealPipelineArchived' => 'dealPipelineArchived',
        'dealPipelineReordered' => 'dealPipelineReordered',
        'dealActivityUpdated' => 'dealActivityUpdated',
        'dealActivityItemCreated' => 'dealActivityItemCreated',
        'dealActivityItemUpdated' => 'dealActivityItemUpdated',
        'dealActivityItemDeleted' => 'dealActivityItemDeleted',
        'dealActivityItemBulkMarked' => 'dealActivityItemBulkMarked',
        'dealTimelineItemDeleted' => 'dealTimelineItemDeleted',
        'dealTimelineItemCreated' => 'dealTimelineItemCreated',
        'aIAssistantCreated' => 'AIAssistantCreated',
        'aIAssistantState' => 'AIAssistantState',
        'aIAssistantDeleted' => 'AIAssistantDeleted',
        'aIAssistantLinkDeleted' => 'AIAssistantLinkDeleted',
        'aIAssistantLinkState' => 'AIAssistantLinkState',
        'aIAssistantLinkCreated' => 'AIAssistantLinkCreated',
        'aIAssistantSubLinkState' => 'AIAssistantSubLinkState',
        'aIAssistantSubLinkCreated' => 'AIAssistantSubLinkCreated',
        'emailCampaignEmailSenderCreated' => 'emailCampaignEmailSenderCreated',
        'emailCampaignEmailSenderUpdated' => 'emailCampaignEmailSenderUpdated',
        'emailCampaignEmailSenderDeleted' => 'emailCampaignEmailSenderDeleted',
        'emailCampaignEmailSenderVerified' => 'emailCampaignEmailSenderVerified',
        'emailCampaignDomainCreated' => 'emailCampaignDomainCreated',
        'emailCampaignDomainDeleted' => 'emailCampaignDomainDeleted',
        'emailCampaignDomainVerified' => 'emailCampaignDomainVerified',
        'emailCampaignDomainDkimVerified' => 'emailCampaignDomainDkimVerified',
        'emailCampaignDomainReturnPathVerified' => 'emailCampaignDomainReturnPathVerified',
        'emailCampaignBulkProcessProgress' => 'emailCampaignBulkProcessProgress',
        'smsCampaignInvalidated' => 'smsCampaignInvalidated'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'systemCacheClear' => 'setSystemCacheClear',
        'systemExit' => 'setSystemExit',
        'systemAlert' => 'setSystemAlert',
        'systemAccountStateChanged' => 'setSystemAccountStateChanged',
        'systemAccountAcceptTermsUpdate' => 'setSystemAccountAcceptTermsUpdate',
        'systemAccountClosed' => 'setSystemAccountClosed',
        'systemAccountAdditionalFields' => 'setSystemAccountAdditionalFields',
        'systemAccountPermissionsChanged' => 'setSystemAccountPermissionsChanged',
        'userProfileChanged' => 'setUserProfileChanged',
        'userBalanceChanged' => 'setUserBalanceChanged',
        'userImpersonationEnd' => 'setUserImpersonationEnd',
        'messageDeleted' => 'setMessageDeleted',
        'messageIncoming' => 'setMessageIncoming',
        'messageIncomingDeleted' => 'setMessageIncomingDeleted',
        'messageStateChanged' => 'setMessageStateChanged',
        'messageBulkEnd' => 'setMessageBulkEnd',
        'messageWipeEnd' => 'setMessageWipeEnd',
        'messageSent' => 'setMessageSent',
        'messageLog' => 'setMessageLog',
        'messageNote' => 'setMessageNote',
        'messageInitial' => 'setMessageInitial',
        'lastMessageSet' => 'setLastMessageSet',
        'messageSessionDeleted' => 'setMessageSessionDeleted',
        'messageCacheClear' => 'setMessageCacheClear',
        'messageIncomingCacheClear' => 'setMessageIncomingCacheClear',
        'messageScheduleAdded' => 'setMessageScheduleAdded',
        'messageScheduleStateChanged' => 'setMessageScheduleStateChanged',
        'messageScheduleDeleted' => 'setMessageScheduleDeleted',
        'messageScheduleNotSentStateChanged' => 'setMessageScheduleNotSentStateChanged',
        'messageScheduleCacheClear' => 'setMessageScheduleCacheClear',
        'messageTemplateCacheClear' => 'setMessageTemplateCacheClear',
        'callFinished' => 'setCallFinished',
        'chatCreated' => 'setChatCreated',
        'chatMarkedAsRead' => 'setChatMarkedAsRead',
        'chatMuted' => 'setChatMuted',
        'chatUnmuted' => 'setChatUnmuted',
        'chatPinned' => 'setChatPinned',
        'chatUnpinned' => 'setChatUnpinned',
        'chatDeleted' => 'setChatDeleted',
        'chatClosed' => 'setChatClosed',
        'chatReopened' => 'setChatReopened',
        'chatActivated' => 'setChatActivated',
        'chatCacheClear' => 'setChatCacheClear',
        'chatRead' => 'setChatRead',
        'chatUnread' => 'setChatUnread',
        'chatAssigneeChanged' => 'setChatAssigneeChanged',
        'chatTagsChanged' => 'setChatTagsChanged',
        'chatConversationEnded' => 'setChatConversationEnded',
        'chatUpdated' => 'setChatUpdated',
        'liveChatAgentChanged' => 'setLiveChatAgentChanged',
        'liveChatRated' => 'setLiveChatRated',
        'webWidgetUpdated' => 'setWebWidgetUpdated',
        'webWidgetDeleted' => 'setWebWidgetDeleted',
        'contactAdded' => 'setContactAdded',
        'contactDeleted' => 'setContactDeleted',
        'contactStateChanged' => 'setContactStateChanged',
        'contactUnsubscribed' => 'setContactUnsubscribed',
        'contactResubscribed' => 'setContactResubscribed',
        'contactNoteAdded' => 'setContactNoteAdded',
        'contactNoteDeleted' => 'setContactNoteDeleted',
        'contactNoteStateChanged' => 'setContactNoteStateChanged',
        'listAdded' => 'setListAdded',
        'listDeleted' => 'setListDeleted',
        'listStateChanged' => 'setListStateChanged',
        'listCountMembersUpdated' => 'setListCountMembersUpdated',
        'contactWipeEnd' => 'setContactWipeEnd',
        'contactImportEnd' => 'setContactImportEnd',
        'contactCacheClear' => 'setContactCacheClear',
        'listCacheClear' => 'setListCacheClear',
        'customFieldsCacheClear' => 'setCustomFieldsCacheClear',
        'progressCarrierBulkLookup' => 'setProgressCarrierBulkLookup',
        'progressEmailBulkLookup' => 'setProgressEmailBulkLookup',
        'progressSubAccountBulkImport' => 'setProgressSubAccountBulkImport',
        'progressContactBulkImport' => 'setProgressContactBulkImport',
        'forceRefreshWebApp' => 'setForceRefreshWebApp',
        'chatSenderSettingsChanged' => 'setChatSenderSettingsChanged',
        'countrySenderSettingsChanged' => 'setCountrySenderSettingsChanged',
        'chatSummaryChunk' => 'setChatSummaryChunk',
        'chatWaysToReplyChunk' => 'setChatWaysToReplyChunk',
        'chatSuggestedReplyChunk' => 'setChatSuggestedReplyChunk',
        'userSubscriptionChanged' => 'setUserSubscriptionChanged',
        'userSubscriptionDeleted' => 'setUserSubscriptionDeleted',
        'taskCreated' => 'setTaskCreated',
        'taskUpdated' => 'setTaskUpdated',
        'taskReordered' => 'setTaskReordered',
        'taskDeleted' => 'setTaskDeleted',
        'taskMovedAll' => 'setTaskMovedAll',
        'taskStageCreated' => 'setTaskStageCreated',
        'taskStageUpdated' => 'setTaskStageUpdated',
        'taskStageDeleted' => 'setTaskStageDeleted',
        'taskBoardCreated' => 'setTaskBoardCreated',
        'taskBoardUpdated' => 'setTaskBoardUpdated',
        'taskBoardReordered' => 'setTaskBoardReordered',
        'taskBoardDeleted' => 'setTaskBoardDeleted',
        'taskBoardArchived' => 'setTaskBoardArchived',
        'taskChecklistCreated' => 'setTaskChecklistCreated',
        'taskChecklistUpdated' => 'setTaskChecklistUpdated',
        'taskChecklistDeleted' => 'setTaskChecklistDeleted',
        'taskChecklistBulkMarked' => 'setTaskChecklistBulkMarked',
        'taskChecklistItemCreated' => 'setTaskChecklistItemCreated',
        'taskChecklistItemUpdated' => 'setTaskChecklistItemUpdated',
        'taskChecklistItemDeleted' => 'setTaskChecklistItemDeleted',
        'taskCommentCreated' => 'setTaskCommentCreated',
        'taskCommentDeleted' => 'setTaskCommentDeleted',
        'pinnedContactAdded' => 'setPinnedContactAdded',
        'pinnedContactRemoved' => 'setPinnedContactRemoved',
        'pinnedContactReordered' => 'setPinnedContactReordered',
        'pinnedContactStateChanged' => 'setPinnedContactStateChanged',
        'whatsappAccountAdded' => 'setWhatsappAccountAdded',
        'whatsappAccountRemoved' => 'setWhatsappAccountRemoved',
        'whatsappAccountChanged' => 'setWhatsappAccountChanged',
        'facebookPageAdded' => 'setFacebookPageAdded',
        'facebookPageRemoved' => 'setFacebookPageRemoved',
        'facebookPageChanged' => 'setFacebookPageChanged',
        'instagramAccountAdded' => 'setInstagramAccountAdded',
        'instagramAccountRemoved' => 'setInstagramAccountRemoved',
        'instagramAccountChanged' => 'setInstagramAccountChanged',
        'unreadTicketsCountUpdated' => 'setUnreadTicketsCountUpdated',
        'ticketDeleted' => 'setTicketDeleted',
        'ticketUpdated' => 'setTicketUpdated',
        'ticketCreated' => 'setTicketCreated',
        'ticketBulkUpdated' => 'setTicketBulkUpdated',
        'ticketBulkDeleted' => 'setTicketBulkDeleted',
        'ticketMessageCreated' => 'setTicketMessageCreated',
        'ticketMessageUpdated' => 'setTicketMessageUpdated',
        'ticketMessageDeleted' => 'setTicketMessageDeleted',
        'subAccountsClosed' => 'setSubAccountsClosed',
        'userInvited' => 'setUserInvited',
        'filteredViewCreated' => 'setFilteredViewCreated',
        'filteredViewCountUpdated' => 'setFilteredViewCountUpdated',
        'filteredViewDeleted' => 'setFilteredViewDeleted',
        'forwardingInboxWasVerified' => 'setForwardingInboxWasVerified',
        'forwardingInboxCheckWasFailed' => 'setForwardingInboxCheckWasFailed',
        'forwardingInboxVerificationLinkWasParsed' => 'setForwardingInboxVerificationLinkWasParsed',
        'tendlcLinkNumberStatusUpdated' => 'setTendlcLinkNumberStatusUpdated',
        'channelPresence' => 'setChannelPresence',
        'dealCreated' => 'setDealCreated',
        'dealUpdated' => 'setDealUpdated',
        'dealDeleted' => 'setDealDeleted',
        'dealMoved' => 'setDealMoved',
        'dealStageCreated' => 'setDealStageCreated',
        'dealStageUpdated' => 'setDealStageUpdated',
        'dealStageDeleted' => 'setDealStageDeleted',
        'dealPipelineCreated' => 'setDealPipelineCreated',
        'dealPipelineUpdated' => 'setDealPipelineUpdated',
        'dealPipelineDeleted' => 'setDealPipelineDeleted',
        'dealPipelineArchived' => 'setDealPipelineArchived',
        'dealPipelineReordered' => 'setDealPipelineReordered',
        'dealActivityUpdated' => 'setDealActivityUpdated',
        'dealActivityItemCreated' => 'setDealActivityItemCreated',
        'dealActivityItemUpdated' => 'setDealActivityItemUpdated',
        'dealActivityItemDeleted' => 'setDealActivityItemDeleted',
        'dealActivityItemBulkMarked' => 'setDealActivityItemBulkMarked',
        'dealTimelineItemDeleted' => 'setDealTimelineItemDeleted',
        'dealTimelineItemCreated' => 'setDealTimelineItemCreated',
        'aIAssistantCreated' => 'setAIAssistantCreated',
        'aIAssistantState' => 'setAIAssistantState',
        'aIAssistantDeleted' => 'setAIAssistantDeleted',
        'aIAssistantLinkDeleted' => 'setAIAssistantLinkDeleted',
        'aIAssistantLinkState' => 'setAIAssistantLinkState',
        'aIAssistantLinkCreated' => 'setAIAssistantLinkCreated',
        'aIAssistantSubLinkState' => 'setAIAssistantSubLinkState',
        'aIAssistantSubLinkCreated' => 'setAIAssistantSubLinkCreated',
        'emailCampaignEmailSenderCreated' => 'setEmailCampaignEmailSenderCreated',
        'emailCampaignEmailSenderUpdated' => 'setEmailCampaignEmailSenderUpdated',
        'emailCampaignEmailSenderDeleted' => 'setEmailCampaignEmailSenderDeleted',
        'emailCampaignEmailSenderVerified' => 'setEmailCampaignEmailSenderVerified',
        'emailCampaignDomainCreated' => 'setEmailCampaignDomainCreated',
        'emailCampaignDomainDeleted' => 'setEmailCampaignDomainDeleted',
        'emailCampaignDomainVerified' => 'setEmailCampaignDomainVerified',
        'emailCampaignDomainDkimVerified' => 'setEmailCampaignDomainDkimVerified',
        'emailCampaignDomainReturnPathVerified' => 'setEmailCampaignDomainReturnPathVerified',
        'emailCampaignBulkProcessProgress' => 'setEmailCampaignBulkProcessProgress',
        'smsCampaignInvalidated' => 'setSmsCampaignInvalidated'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'systemCacheClear' => 'getSystemCacheClear',
        'systemExit' => 'getSystemExit',
        'systemAlert' => 'getSystemAlert',
        'systemAccountStateChanged' => 'getSystemAccountStateChanged',
        'systemAccountAcceptTermsUpdate' => 'getSystemAccountAcceptTermsUpdate',
        'systemAccountClosed' => 'getSystemAccountClosed',
        'systemAccountAdditionalFields' => 'getSystemAccountAdditionalFields',
        'systemAccountPermissionsChanged' => 'getSystemAccountPermissionsChanged',
        'userProfileChanged' => 'getUserProfileChanged',
        'userBalanceChanged' => 'getUserBalanceChanged',
        'userImpersonationEnd' => 'getUserImpersonationEnd',
        'messageDeleted' => 'getMessageDeleted',
        'messageIncoming' => 'getMessageIncoming',
        'messageIncomingDeleted' => 'getMessageIncomingDeleted',
        'messageStateChanged' => 'getMessageStateChanged',
        'messageBulkEnd' => 'getMessageBulkEnd',
        'messageWipeEnd' => 'getMessageWipeEnd',
        'messageSent' => 'getMessageSent',
        'messageLog' => 'getMessageLog',
        'messageNote' => 'getMessageNote',
        'messageInitial' => 'getMessageInitial',
        'lastMessageSet' => 'getLastMessageSet',
        'messageSessionDeleted' => 'getMessageSessionDeleted',
        'messageCacheClear' => 'getMessageCacheClear',
        'messageIncomingCacheClear' => 'getMessageIncomingCacheClear',
        'messageScheduleAdded' => 'getMessageScheduleAdded',
        'messageScheduleStateChanged' => 'getMessageScheduleStateChanged',
        'messageScheduleDeleted' => 'getMessageScheduleDeleted',
        'messageScheduleNotSentStateChanged' => 'getMessageScheduleNotSentStateChanged',
        'messageScheduleCacheClear' => 'getMessageScheduleCacheClear',
        'messageTemplateCacheClear' => 'getMessageTemplateCacheClear',
        'callFinished' => 'getCallFinished',
        'chatCreated' => 'getChatCreated',
        'chatMarkedAsRead' => 'getChatMarkedAsRead',
        'chatMuted' => 'getChatMuted',
        'chatUnmuted' => 'getChatUnmuted',
        'chatPinned' => 'getChatPinned',
        'chatUnpinned' => 'getChatUnpinned',
        'chatDeleted' => 'getChatDeleted',
        'chatClosed' => 'getChatClosed',
        'chatReopened' => 'getChatReopened',
        'chatActivated' => 'getChatActivated',
        'chatCacheClear' => 'getChatCacheClear',
        'chatRead' => 'getChatRead',
        'chatUnread' => 'getChatUnread',
        'chatAssigneeChanged' => 'getChatAssigneeChanged',
        'chatTagsChanged' => 'getChatTagsChanged',
        'chatConversationEnded' => 'getChatConversationEnded',
        'chatUpdated' => 'getChatUpdated',
        'liveChatAgentChanged' => 'getLiveChatAgentChanged',
        'liveChatRated' => 'getLiveChatRated',
        'webWidgetUpdated' => 'getWebWidgetUpdated',
        'webWidgetDeleted' => 'getWebWidgetDeleted',
        'contactAdded' => 'getContactAdded',
        'contactDeleted' => 'getContactDeleted',
        'contactStateChanged' => 'getContactStateChanged',
        'contactUnsubscribed' => 'getContactUnsubscribed',
        'contactResubscribed' => 'getContactResubscribed',
        'contactNoteAdded' => 'getContactNoteAdded',
        'contactNoteDeleted' => 'getContactNoteDeleted',
        'contactNoteStateChanged' => 'getContactNoteStateChanged',
        'listAdded' => 'getListAdded',
        'listDeleted' => 'getListDeleted',
        'listStateChanged' => 'getListStateChanged',
        'listCountMembersUpdated' => 'getListCountMembersUpdated',
        'contactWipeEnd' => 'getContactWipeEnd',
        'contactImportEnd' => 'getContactImportEnd',
        'contactCacheClear' => 'getContactCacheClear',
        'listCacheClear' => 'getListCacheClear',
        'customFieldsCacheClear' => 'getCustomFieldsCacheClear',
        'progressCarrierBulkLookup' => 'getProgressCarrierBulkLookup',
        'progressEmailBulkLookup' => 'getProgressEmailBulkLookup',
        'progressSubAccountBulkImport' => 'getProgressSubAccountBulkImport',
        'progressContactBulkImport' => 'getProgressContactBulkImport',
        'forceRefreshWebApp' => 'getForceRefreshWebApp',
        'chatSenderSettingsChanged' => 'getChatSenderSettingsChanged',
        'countrySenderSettingsChanged' => 'getCountrySenderSettingsChanged',
        'chatSummaryChunk' => 'getChatSummaryChunk',
        'chatWaysToReplyChunk' => 'getChatWaysToReplyChunk',
        'chatSuggestedReplyChunk' => 'getChatSuggestedReplyChunk',
        'userSubscriptionChanged' => 'getUserSubscriptionChanged',
        'userSubscriptionDeleted' => 'getUserSubscriptionDeleted',
        'taskCreated' => 'getTaskCreated',
        'taskUpdated' => 'getTaskUpdated',
        'taskReordered' => 'getTaskReordered',
        'taskDeleted' => 'getTaskDeleted',
        'taskMovedAll' => 'getTaskMovedAll',
        'taskStageCreated' => 'getTaskStageCreated',
        'taskStageUpdated' => 'getTaskStageUpdated',
        'taskStageDeleted' => 'getTaskStageDeleted',
        'taskBoardCreated' => 'getTaskBoardCreated',
        'taskBoardUpdated' => 'getTaskBoardUpdated',
        'taskBoardReordered' => 'getTaskBoardReordered',
        'taskBoardDeleted' => 'getTaskBoardDeleted',
        'taskBoardArchived' => 'getTaskBoardArchived',
        'taskChecklistCreated' => 'getTaskChecklistCreated',
        'taskChecklistUpdated' => 'getTaskChecklistUpdated',
        'taskChecklistDeleted' => 'getTaskChecklistDeleted',
        'taskChecklistBulkMarked' => 'getTaskChecklistBulkMarked',
        'taskChecklistItemCreated' => 'getTaskChecklistItemCreated',
        'taskChecklistItemUpdated' => 'getTaskChecklistItemUpdated',
        'taskChecklistItemDeleted' => 'getTaskChecklistItemDeleted',
        'taskCommentCreated' => 'getTaskCommentCreated',
        'taskCommentDeleted' => 'getTaskCommentDeleted',
        'pinnedContactAdded' => 'getPinnedContactAdded',
        'pinnedContactRemoved' => 'getPinnedContactRemoved',
        'pinnedContactReordered' => 'getPinnedContactReordered',
        'pinnedContactStateChanged' => 'getPinnedContactStateChanged',
        'whatsappAccountAdded' => 'getWhatsappAccountAdded',
        'whatsappAccountRemoved' => 'getWhatsappAccountRemoved',
        'whatsappAccountChanged' => 'getWhatsappAccountChanged',
        'facebookPageAdded' => 'getFacebookPageAdded',
        'facebookPageRemoved' => 'getFacebookPageRemoved',
        'facebookPageChanged' => 'getFacebookPageChanged',
        'instagramAccountAdded' => 'getInstagramAccountAdded',
        'instagramAccountRemoved' => 'getInstagramAccountRemoved',
        'instagramAccountChanged' => 'getInstagramAccountChanged',
        'unreadTicketsCountUpdated' => 'getUnreadTicketsCountUpdated',
        'ticketDeleted' => 'getTicketDeleted',
        'ticketUpdated' => 'getTicketUpdated',
        'ticketCreated' => 'getTicketCreated',
        'ticketBulkUpdated' => 'getTicketBulkUpdated',
        'ticketBulkDeleted' => 'getTicketBulkDeleted',
        'ticketMessageCreated' => 'getTicketMessageCreated',
        'ticketMessageUpdated' => 'getTicketMessageUpdated',
        'ticketMessageDeleted' => 'getTicketMessageDeleted',
        'subAccountsClosed' => 'getSubAccountsClosed',
        'userInvited' => 'getUserInvited',
        'filteredViewCreated' => 'getFilteredViewCreated',
        'filteredViewCountUpdated' => 'getFilteredViewCountUpdated',
        'filteredViewDeleted' => 'getFilteredViewDeleted',
        'forwardingInboxWasVerified' => 'getForwardingInboxWasVerified',
        'forwardingInboxCheckWasFailed' => 'getForwardingInboxCheckWasFailed',
        'forwardingInboxVerificationLinkWasParsed' => 'getForwardingInboxVerificationLinkWasParsed',
        'tendlcLinkNumberStatusUpdated' => 'getTendlcLinkNumberStatusUpdated',
        'channelPresence' => 'getChannelPresence',
        'dealCreated' => 'getDealCreated',
        'dealUpdated' => 'getDealUpdated',
        'dealDeleted' => 'getDealDeleted',
        'dealMoved' => 'getDealMoved',
        'dealStageCreated' => 'getDealStageCreated',
        'dealStageUpdated' => 'getDealStageUpdated',
        'dealStageDeleted' => 'getDealStageDeleted',
        'dealPipelineCreated' => 'getDealPipelineCreated',
        'dealPipelineUpdated' => 'getDealPipelineUpdated',
        'dealPipelineDeleted' => 'getDealPipelineDeleted',
        'dealPipelineArchived' => 'getDealPipelineArchived',
        'dealPipelineReordered' => 'getDealPipelineReordered',
        'dealActivityUpdated' => 'getDealActivityUpdated',
        'dealActivityItemCreated' => 'getDealActivityItemCreated',
        'dealActivityItemUpdated' => 'getDealActivityItemUpdated',
        'dealActivityItemDeleted' => 'getDealActivityItemDeleted',
        'dealActivityItemBulkMarked' => 'getDealActivityItemBulkMarked',
        'dealTimelineItemDeleted' => 'getDealTimelineItemDeleted',
        'dealTimelineItemCreated' => 'getDealTimelineItemCreated',
        'aIAssistantCreated' => 'getAIAssistantCreated',
        'aIAssistantState' => 'getAIAssistantState',
        'aIAssistantDeleted' => 'getAIAssistantDeleted',
        'aIAssistantLinkDeleted' => 'getAIAssistantLinkDeleted',
        'aIAssistantLinkState' => 'getAIAssistantLinkState',
        'aIAssistantLinkCreated' => 'getAIAssistantLinkCreated',
        'aIAssistantSubLinkState' => 'getAIAssistantSubLinkState',
        'aIAssistantSubLinkCreated' => 'getAIAssistantSubLinkCreated',
        'emailCampaignEmailSenderCreated' => 'getEmailCampaignEmailSenderCreated',
        'emailCampaignEmailSenderUpdated' => 'getEmailCampaignEmailSenderUpdated',
        'emailCampaignEmailSenderDeleted' => 'getEmailCampaignEmailSenderDeleted',
        'emailCampaignEmailSenderVerified' => 'getEmailCampaignEmailSenderVerified',
        'emailCampaignDomainCreated' => 'getEmailCampaignDomainCreated',
        'emailCampaignDomainDeleted' => 'getEmailCampaignDomainDeleted',
        'emailCampaignDomainVerified' => 'getEmailCampaignDomainVerified',
        'emailCampaignDomainDkimVerified' => 'getEmailCampaignDomainDkimVerified',
        'emailCampaignDomainReturnPathVerified' => 'getEmailCampaignDomainReturnPathVerified',
        'emailCampaignBulkProcessProgress' => 'getEmailCampaignBulkProcessProgress',
        'smsCampaignInvalidated' => 'getSmsCampaignInvalidated'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['systemCacheClear'] = isset($data['systemCacheClear']) ? $data['systemCacheClear'] : null;
        $this->container['systemExit'] = isset($data['systemExit']) ? $data['systemExit'] : null;
        $this->container['systemAlert'] = isset($data['systemAlert']) ? $data['systemAlert'] : null;
        $this->container['systemAccountStateChanged'] = isset($data['systemAccountStateChanged']) ? $data['systemAccountStateChanged'] : null;
        $this->container['systemAccountAcceptTermsUpdate'] = isset($data['systemAccountAcceptTermsUpdate']) ? $data['systemAccountAcceptTermsUpdate'] : null;
        $this->container['systemAccountClosed'] = isset($data['systemAccountClosed']) ? $data['systemAccountClosed'] : null;
        $this->container['systemAccountAdditionalFields'] = isset($data['systemAccountAdditionalFields']) ? $data['systemAccountAdditionalFields'] : null;
        $this->container['systemAccountPermissionsChanged'] = isset($data['systemAccountPermissionsChanged']) ? $data['systemAccountPermissionsChanged'] : null;
        $this->container['userProfileChanged'] = isset($data['userProfileChanged']) ? $data['userProfileChanged'] : null;
        $this->container['userBalanceChanged'] = isset($data['userBalanceChanged']) ? $data['userBalanceChanged'] : null;
        $this->container['userImpersonationEnd'] = isset($data['userImpersonationEnd']) ? $data['userImpersonationEnd'] : null;
        $this->container['messageDeleted'] = isset($data['messageDeleted']) ? $data['messageDeleted'] : null;
        $this->container['messageIncoming'] = isset($data['messageIncoming']) ? $data['messageIncoming'] : null;
        $this->container['messageIncomingDeleted'] = isset($data['messageIncomingDeleted']) ? $data['messageIncomingDeleted'] : null;
        $this->container['messageStateChanged'] = isset($data['messageStateChanged']) ? $data['messageStateChanged'] : null;
        $this->container['messageBulkEnd'] = isset($data['messageBulkEnd']) ? $data['messageBulkEnd'] : null;
        $this->container['messageWipeEnd'] = isset($data['messageWipeEnd']) ? $data['messageWipeEnd'] : null;
        $this->container['messageSent'] = isset($data['messageSent']) ? $data['messageSent'] : null;
        $this->container['messageLog'] = isset($data['messageLog']) ? $data['messageLog'] : null;
        $this->container['messageNote'] = isset($data['messageNote']) ? $data['messageNote'] : null;
        $this->container['messageInitial'] = isset($data['messageInitial']) ? $data['messageInitial'] : null;
        $this->container['lastMessageSet'] = isset($data['lastMessageSet']) ? $data['lastMessageSet'] : null;
        $this->container['messageSessionDeleted'] = isset($data['messageSessionDeleted']) ? $data['messageSessionDeleted'] : null;
        $this->container['messageCacheClear'] = isset($data['messageCacheClear']) ? $data['messageCacheClear'] : null;
        $this->container['messageIncomingCacheClear'] = isset($data['messageIncomingCacheClear']) ? $data['messageIncomingCacheClear'] : null;
        $this->container['messageScheduleAdded'] = isset($data['messageScheduleAdded']) ? $data['messageScheduleAdded'] : null;
        $this->container['messageScheduleStateChanged'] = isset($data['messageScheduleStateChanged']) ? $data['messageScheduleStateChanged'] : null;
        $this->container['messageScheduleDeleted'] = isset($data['messageScheduleDeleted']) ? $data['messageScheduleDeleted'] : null;
        $this->container['messageScheduleNotSentStateChanged'] = isset($data['messageScheduleNotSentStateChanged']) ? $data['messageScheduleNotSentStateChanged'] : null;
        $this->container['messageScheduleCacheClear'] = isset($data['messageScheduleCacheClear']) ? $data['messageScheduleCacheClear'] : null;
        $this->container['messageTemplateCacheClear'] = isset($data['messageTemplateCacheClear']) ? $data['messageTemplateCacheClear'] : null;
        $this->container['callFinished'] = isset($data['callFinished']) ? $data['callFinished'] : null;
        $this->container['chatCreated'] = isset($data['chatCreated']) ? $data['chatCreated'] : null;
        $this->container['chatMarkedAsRead'] = isset($data['chatMarkedAsRead']) ? $data['chatMarkedAsRead'] : null;
        $this->container['chatMuted'] = isset($data['chatMuted']) ? $data['chatMuted'] : null;
        $this->container['chatUnmuted'] = isset($data['chatUnmuted']) ? $data['chatUnmuted'] : null;
        $this->container['chatPinned'] = isset($data['chatPinned']) ? $data['chatPinned'] : null;
        $this->container['chatUnpinned'] = isset($data['chatUnpinned']) ? $data['chatUnpinned'] : null;
        $this->container['chatDeleted'] = isset($data['chatDeleted']) ? $data['chatDeleted'] : null;
        $this->container['chatClosed'] = isset($data['chatClosed']) ? $data['chatClosed'] : null;
        $this->container['chatReopened'] = isset($data['chatReopened']) ? $data['chatReopened'] : null;
        $this->container['chatActivated'] = isset($data['chatActivated']) ? $data['chatActivated'] : null;
        $this->container['chatCacheClear'] = isset($data['chatCacheClear']) ? $data['chatCacheClear'] : null;
        $this->container['chatRead'] = isset($data['chatRead']) ? $data['chatRead'] : null;
        $this->container['chatUnread'] = isset($data['chatUnread']) ? $data['chatUnread'] : null;
        $this->container['chatAssigneeChanged'] = isset($data['chatAssigneeChanged']) ? $data['chatAssigneeChanged'] : null;
        $this->container['chatTagsChanged'] = isset($data['chatTagsChanged']) ? $data['chatTagsChanged'] : null;
        $this->container['chatConversationEnded'] = isset($data['chatConversationEnded']) ? $data['chatConversationEnded'] : null;
        $this->container['chatUpdated'] = isset($data['chatUpdated']) ? $data['chatUpdated'] : null;
        $this->container['liveChatAgentChanged'] = isset($data['liveChatAgentChanged']) ? $data['liveChatAgentChanged'] : null;
        $this->container['liveChatRated'] = isset($data['liveChatRated']) ? $data['liveChatRated'] : null;
        $this->container['webWidgetUpdated'] = isset($data['webWidgetUpdated']) ? $data['webWidgetUpdated'] : null;
        $this->container['webWidgetDeleted'] = isset($data['webWidgetDeleted']) ? $data['webWidgetDeleted'] : null;
        $this->container['contactAdded'] = isset($data['contactAdded']) ? $data['contactAdded'] : null;
        $this->container['contactDeleted'] = isset($data['contactDeleted']) ? $data['contactDeleted'] : null;
        $this->container['contactStateChanged'] = isset($data['contactStateChanged']) ? $data['contactStateChanged'] : null;
        $this->container['contactUnsubscribed'] = isset($data['contactUnsubscribed']) ? $data['contactUnsubscribed'] : null;
        $this->container['contactResubscribed'] = isset($data['contactResubscribed']) ? $data['contactResubscribed'] : null;
        $this->container['contactNoteAdded'] = isset($data['contactNoteAdded']) ? $data['contactNoteAdded'] : null;
        $this->container['contactNoteDeleted'] = isset($data['contactNoteDeleted']) ? $data['contactNoteDeleted'] : null;
        $this->container['contactNoteStateChanged'] = isset($data['contactNoteStateChanged']) ? $data['contactNoteStateChanged'] : null;
        $this->container['listAdded'] = isset($data['listAdded']) ? $data['listAdded'] : null;
        $this->container['listDeleted'] = isset($data['listDeleted']) ? $data['listDeleted'] : null;
        $this->container['listStateChanged'] = isset($data['listStateChanged']) ? $data['listStateChanged'] : null;
        $this->container['listCountMembersUpdated'] = isset($data['listCountMembersUpdated']) ? $data['listCountMembersUpdated'] : null;
        $this->container['contactWipeEnd'] = isset($data['contactWipeEnd']) ? $data['contactWipeEnd'] : null;
        $this->container['contactImportEnd'] = isset($data['contactImportEnd']) ? $data['contactImportEnd'] : null;
        $this->container['contactCacheClear'] = isset($data['contactCacheClear']) ? $data['contactCacheClear'] : null;
        $this->container['listCacheClear'] = isset($data['listCacheClear']) ? $data['listCacheClear'] : null;
        $this->container['customFieldsCacheClear'] = isset($data['customFieldsCacheClear']) ? $data['customFieldsCacheClear'] : null;
        $this->container['progressCarrierBulkLookup'] = isset($data['progressCarrierBulkLookup']) ? $data['progressCarrierBulkLookup'] : null;
        $this->container['progressEmailBulkLookup'] = isset($data['progressEmailBulkLookup']) ? $data['progressEmailBulkLookup'] : null;
        $this->container['progressSubAccountBulkImport'] = isset($data['progressSubAccountBulkImport']) ? $data['progressSubAccountBulkImport'] : null;
        $this->container['progressContactBulkImport'] = isset($data['progressContactBulkImport']) ? $data['progressContactBulkImport'] : null;
        $this->container['forceRefreshWebApp'] = isset($data['forceRefreshWebApp']) ? $data['forceRefreshWebApp'] : null;
        $this->container['chatSenderSettingsChanged'] = isset($data['chatSenderSettingsChanged']) ? $data['chatSenderSettingsChanged'] : null;
        $this->container['countrySenderSettingsChanged'] = isset($data['countrySenderSettingsChanged']) ? $data['countrySenderSettingsChanged'] : null;
        $this->container['chatSummaryChunk'] = isset($data['chatSummaryChunk']) ? $data['chatSummaryChunk'] : null;
        $this->container['chatWaysToReplyChunk'] = isset($data['chatWaysToReplyChunk']) ? $data['chatWaysToReplyChunk'] : null;
        $this->container['chatSuggestedReplyChunk'] = isset($data['chatSuggestedReplyChunk']) ? $data['chatSuggestedReplyChunk'] : null;
        $this->container['userSubscriptionChanged'] = isset($data['userSubscriptionChanged']) ? $data['userSubscriptionChanged'] : null;
        $this->container['userSubscriptionDeleted'] = isset($data['userSubscriptionDeleted']) ? $data['userSubscriptionDeleted'] : null;
        $this->container['taskCreated'] = isset($data['taskCreated']) ? $data['taskCreated'] : null;
        $this->container['taskUpdated'] = isset($data['taskUpdated']) ? $data['taskUpdated'] : null;
        $this->container['taskReordered'] = isset($data['taskReordered']) ? $data['taskReordered'] : null;
        $this->container['taskDeleted'] = isset($data['taskDeleted']) ? $data['taskDeleted'] : null;
        $this->container['taskMovedAll'] = isset($data['taskMovedAll']) ? $data['taskMovedAll'] : null;
        $this->container['taskStageCreated'] = isset($data['taskStageCreated']) ? $data['taskStageCreated'] : null;
        $this->container['taskStageUpdated'] = isset($data['taskStageUpdated']) ? $data['taskStageUpdated'] : null;
        $this->container['taskStageDeleted'] = isset($data['taskStageDeleted']) ? $data['taskStageDeleted'] : null;
        $this->container['taskBoardCreated'] = isset($data['taskBoardCreated']) ? $data['taskBoardCreated'] : null;
        $this->container['taskBoardUpdated'] = isset($data['taskBoardUpdated']) ? $data['taskBoardUpdated'] : null;
        $this->container['taskBoardReordered'] = isset($data['taskBoardReordered']) ? $data['taskBoardReordered'] : null;
        $this->container['taskBoardDeleted'] = isset($data['taskBoardDeleted']) ? $data['taskBoardDeleted'] : null;
        $this->container['taskBoardArchived'] = isset($data['taskBoardArchived']) ? $data['taskBoardArchived'] : null;
        $this->container['taskChecklistCreated'] = isset($data['taskChecklistCreated']) ? $data['taskChecklistCreated'] : null;
        $this->container['taskChecklistUpdated'] = isset($data['taskChecklistUpdated']) ? $data['taskChecklistUpdated'] : null;
        $this->container['taskChecklistDeleted'] = isset($data['taskChecklistDeleted']) ? $data['taskChecklistDeleted'] : null;
        $this->container['taskChecklistBulkMarked'] = isset($data['taskChecklistBulkMarked']) ? $data['taskChecklistBulkMarked'] : null;
        $this->container['taskChecklistItemCreated'] = isset($data['taskChecklistItemCreated']) ? $data['taskChecklistItemCreated'] : null;
        $this->container['taskChecklistItemUpdated'] = isset($data['taskChecklistItemUpdated']) ? $data['taskChecklistItemUpdated'] : null;
        $this->container['taskChecklistItemDeleted'] = isset($data['taskChecklistItemDeleted']) ? $data['taskChecklistItemDeleted'] : null;
        $this->container['taskCommentCreated'] = isset($data['taskCommentCreated']) ? $data['taskCommentCreated'] : null;
        $this->container['taskCommentDeleted'] = isset($data['taskCommentDeleted']) ? $data['taskCommentDeleted'] : null;
        $this->container['pinnedContactAdded'] = isset($data['pinnedContactAdded']) ? $data['pinnedContactAdded'] : null;
        $this->container['pinnedContactRemoved'] = isset($data['pinnedContactRemoved']) ? $data['pinnedContactRemoved'] : null;
        $this->container['pinnedContactReordered'] = isset($data['pinnedContactReordered']) ? $data['pinnedContactReordered'] : null;
        $this->container['pinnedContactStateChanged'] = isset($data['pinnedContactStateChanged']) ? $data['pinnedContactStateChanged'] : null;
        $this->container['whatsappAccountAdded'] = isset($data['whatsappAccountAdded']) ? $data['whatsappAccountAdded'] : null;
        $this->container['whatsappAccountRemoved'] = isset($data['whatsappAccountRemoved']) ? $data['whatsappAccountRemoved'] : null;
        $this->container['whatsappAccountChanged'] = isset($data['whatsappAccountChanged']) ? $data['whatsappAccountChanged'] : null;
        $this->container['facebookPageAdded'] = isset($data['facebookPageAdded']) ? $data['facebookPageAdded'] : null;
        $this->container['facebookPageRemoved'] = isset($data['facebookPageRemoved']) ? $data['facebookPageRemoved'] : null;
        $this->container['facebookPageChanged'] = isset($data['facebookPageChanged']) ? $data['facebookPageChanged'] : null;
        $this->container['instagramAccountAdded'] = isset($data['instagramAccountAdded']) ? $data['instagramAccountAdded'] : null;
        $this->container['instagramAccountRemoved'] = isset($data['instagramAccountRemoved']) ? $data['instagramAccountRemoved'] : null;
        $this->container['instagramAccountChanged'] = isset($data['instagramAccountChanged']) ? $data['instagramAccountChanged'] : null;
        $this->container['unreadTicketsCountUpdated'] = isset($data['unreadTicketsCountUpdated']) ? $data['unreadTicketsCountUpdated'] : null;
        $this->container['ticketDeleted'] = isset($data['ticketDeleted']) ? $data['ticketDeleted'] : null;
        $this->container['ticketUpdated'] = isset($data['ticketUpdated']) ? $data['ticketUpdated'] : null;
        $this->container['ticketCreated'] = isset($data['ticketCreated']) ? $data['ticketCreated'] : null;
        $this->container['ticketBulkUpdated'] = isset($data['ticketBulkUpdated']) ? $data['ticketBulkUpdated'] : null;
        $this->container['ticketBulkDeleted'] = isset($data['ticketBulkDeleted']) ? $data['ticketBulkDeleted'] : null;
        $this->container['ticketMessageCreated'] = isset($data['ticketMessageCreated']) ? $data['ticketMessageCreated'] : null;
        $this->container['ticketMessageUpdated'] = isset($data['ticketMessageUpdated']) ? $data['ticketMessageUpdated'] : null;
        $this->container['ticketMessageDeleted'] = isset($data['ticketMessageDeleted']) ? $data['ticketMessageDeleted'] : null;
        $this->container['subAccountsClosed'] = isset($data['subAccountsClosed']) ? $data['subAccountsClosed'] : null;
        $this->container['userInvited'] = isset($data['userInvited']) ? $data['userInvited'] : null;
        $this->container['filteredViewCreated'] = isset($data['filteredViewCreated']) ? $data['filteredViewCreated'] : null;
        $this->container['filteredViewCountUpdated'] = isset($data['filteredViewCountUpdated']) ? $data['filteredViewCountUpdated'] : null;
        $this->container['filteredViewDeleted'] = isset($data['filteredViewDeleted']) ? $data['filteredViewDeleted'] : null;
        $this->container['forwardingInboxWasVerified'] = isset($data['forwardingInboxWasVerified']) ? $data['forwardingInboxWasVerified'] : null;
        $this->container['forwardingInboxCheckWasFailed'] = isset($data['forwardingInboxCheckWasFailed']) ? $data['forwardingInboxCheckWasFailed'] : null;
        $this->container['forwardingInboxVerificationLinkWasParsed'] = isset($data['forwardingInboxVerificationLinkWasParsed']) ? $data['forwardingInboxVerificationLinkWasParsed'] : null;
        $this->container['tendlcLinkNumberStatusUpdated'] = isset($data['tendlcLinkNumberStatusUpdated']) ? $data['tendlcLinkNumberStatusUpdated'] : null;
        $this->container['channelPresence'] = isset($data['channelPresence']) ? $data['channelPresence'] : null;
        $this->container['dealCreated'] = isset($data['dealCreated']) ? $data['dealCreated'] : null;
        $this->container['dealUpdated'] = isset($data['dealUpdated']) ? $data['dealUpdated'] : null;
        $this->container['dealDeleted'] = isset($data['dealDeleted']) ? $data['dealDeleted'] : null;
        $this->container['dealMoved'] = isset($data['dealMoved']) ? $data['dealMoved'] : null;
        $this->container['dealStageCreated'] = isset($data['dealStageCreated']) ? $data['dealStageCreated'] : null;
        $this->container['dealStageUpdated'] = isset($data['dealStageUpdated']) ? $data['dealStageUpdated'] : null;
        $this->container['dealStageDeleted'] = isset($data['dealStageDeleted']) ? $data['dealStageDeleted'] : null;
        $this->container['dealPipelineCreated'] = isset($data['dealPipelineCreated']) ? $data['dealPipelineCreated'] : null;
        $this->container['dealPipelineUpdated'] = isset($data['dealPipelineUpdated']) ? $data['dealPipelineUpdated'] : null;
        $this->container['dealPipelineDeleted'] = isset($data['dealPipelineDeleted']) ? $data['dealPipelineDeleted'] : null;
        $this->container['dealPipelineArchived'] = isset($data['dealPipelineArchived']) ? $data['dealPipelineArchived'] : null;
        $this->container['dealPipelineReordered'] = isset($data['dealPipelineReordered']) ? $data['dealPipelineReordered'] : null;
        $this->container['dealActivityUpdated'] = isset($data['dealActivityUpdated']) ? $data['dealActivityUpdated'] : null;
        $this->container['dealActivityItemCreated'] = isset($data['dealActivityItemCreated']) ? $data['dealActivityItemCreated'] : null;
        $this->container['dealActivityItemUpdated'] = isset($data['dealActivityItemUpdated']) ? $data['dealActivityItemUpdated'] : null;
        $this->container['dealActivityItemDeleted'] = isset($data['dealActivityItemDeleted']) ? $data['dealActivityItemDeleted'] : null;
        $this->container['dealActivityItemBulkMarked'] = isset($data['dealActivityItemBulkMarked']) ? $data['dealActivityItemBulkMarked'] : null;
        $this->container['dealTimelineItemDeleted'] = isset($data['dealTimelineItemDeleted']) ? $data['dealTimelineItemDeleted'] : null;
        $this->container['dealTimelineItemCreated'] = isset($data['dealTimelineItemCreated']) ? $data['dealTimelineItemCreated'] : null;
        $this->container['aIAssistantCreated'] = isset($data['aIAssistantCreated']) ? $data['aIAssistantCreated'] : null;
        $this->container['aIAssistantState'] = isset($data['aIAssistantState']) ? $data['aIAssistantState'] : null;
        $this->container['aIAssistantDeleted'] = isset($data['aIAssistantDeleted']) ? $data['aIAssistantDeleted'] : null;
        $this->container['aIAssistantLinkDeleted'] = isset($data['aIAssistantLinkDeleted']) ? $data['aIAssistantLinkDeleted'] : null;
        $this->container['aIAssistantLinkState'] = isset($data['aIAssistantLinkState']) ? $data['aIAssistantLinkState'] : null;
        $this->container['aIAssistantLinkCreated'] = isset($data['aIAssistantLinkCreated']) ? $data['aIAssistantLinkCreated'] : null;
        $this->container['aIAssistantSubLinkState'] = isset($data['aIAssistantSubLinkState']) ? $data['aIAssistantSubLinkState'] : null;
        $this->container['aIAssistantSubLinkCreated'] = isset($data['aIAssistantSubLinkCreated']) ? $data['aIAssistantSubLinkCreated'] : null;
        $this->container['emailCampaignEmailSenderCreated'] = isset($data['emailCampaignEmailSenderCreated']) ? $data['emailCampaignEmailSenderCreated'] : null;
        $this->container['emailCampaignEmailSenderUpdated'] = isset($data['emailCampaignEmailSenderUpdated']) ? $data['emailCampaignEmailSenderUpdated'] : null;
        $this->container['emailCampaignEmailSenderDeleted'] = isset($data['emailCampaignEmailSenderDeleted']) ? $data['emailCampaignEmailSenderDeleted'] : null;
        $this->container['emailCampaignEmailSenderVerified'] = isset($data['emailCampaignEmailSenderVerified']) ? $data['emailCampaignEmailSenderVerified'] : null;
        $this->container['emailCampaignDomainCreated'] = isset($data['emailCampaignDomainCreated']) ? $data['emailCampaignDomainCreated'] : null;
        $this->container['emailCampaignDomainDeleted'] = isset($data['emailCampaignDomainDeleted']) ? $data['emailCampaignDomainDeleted'] : null;
        $this->container['emailCampaignDomainVerified'] = isset($data['emailCampaignDomainVerified']) ? $data['emailCampaignDomainVerified'] : null;
        $this->container['emailCampaignDomainDkimVerified'] = isset($data['emailCampaignDomainDkimVerified']) ? $data['emailCampaignDomainDkimVerified'] : null;
        $this->container['emailCampaignDomainReturnPathVerified'] = isset($data['emailCampaignDomainReturnPathVerified']) ? $data['emailCampaignDomainReturnPathVerified'] : null;
        $this->container['emailCampaignBulkProcessProgress'] = isset($data['emailCampaignBulkProcessProgress']) ? $data['emailCampaignBulkProcessProgress'] : null;
        $this->container['smsCampaignInvalidated'] = isset($data['smsCampaignInvalidated']) ? $data['smsCampaignInvalidated'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['systemCacheClear'] === null) {
            $invalidProperties[] = "'systemCacheClear' can't be null";
        }
        if ($this->container['systemExit'] === null) {
            $invalidProperties[] = "'systemExit' can't be null";
        }
        if ($this->container['systemAlert'] === null) {
            $invalidProperties[] = "'systemAlert' can't be null";
        }
        if ($this->container['systemAccountStateChanged'] === null) {
            $invalidProperties[] = "'systemAccountStateChanged' can't be null";
        }
        if ($this->container['systemAccountAcceptTermsUpdate'] === null) {
            $invalidProperties[] = "'systemAccountAcceptTermsUpdate' can't be null";
        }
        if ($this->container['systemAccountClosed'] === null) {
            $invalidProperties[] = "'systemAccountClosed' can't be null";
        }
        if ($this->container['systemAccountAdditionalFields'] === null) {
            $invalidProperties[] = "'systemAccountAdditionalFields' can't be null";
        }
        if ($this->container['systemAccountPermissionsChanged'] === null) {
            $invalidProperties[] = "'systemAccountPermissionsChanged' can't be null";
        }
        if ($this->container['userProfileChanged'] === null) {
            $invalidProperties[] = "'userProfileChanged' can't be null";
        }
        if ($this->container['userBalanceChanged'] === null) {
            $invalidProperties[] = "'userBalanceChanged' can't be null";
        }
        if ($this->container['userImpersonationEnd'] === null) {
            $invalidProperties[] = "'userImpersonationEnd' can't be null";
        }
        if ($this->container['messageDeleted'] === null) {
            $invalidProperties[] = "'messageDeleted' can't be null";
        }
        if ($this->container['messageIncoming'] === null) {
            $invalidProperties[] = "'messageIncoming' can't be null";
        }
        if ($this->container['messageIncomingDeleted'] === null) {
            $invalidProperties[] = "'messageIncomingDeleted' can't be null";
        }
        if ($this->container['messageStateChanged'] === null) {
            $invalidProperties[] = "'messageStateChanged' can't be null";
        }
        if ($this->container['messageBulkEnd'] === null) {
            $invalidProperties[] = "'messageBulkEnd' can't be null";
        }
        if ($this->container['messageWipeEnd'] === null) {
            $invalidProperties[] = "'messageWipeEnd' can't be null";
        }
        if ($this->container['messageSent'] === null) {
            $invalidProperties[] = "'messageSent' can't be null";
        }
        if ($this->container['messageLog'] === null) {
            $invalidProperties[] = "'messageLog' can't be null";
        }
        if ($this->container['messageNote'] === null) {
            $invalidProperties[] = "'messageNote' can't be null";
        }
        if ($this->container['messageInitial'] === null) {
            $invalidProperties[] = "'messageInitial' can't be null";
        }
        if ($this->container['lastMessageSet'] === null) {
            $invalidProperties[] = "'lastMessageSet' can't be null";
        }
        if ($this->container['messageSessionDeleted'] === null) {
            $invalidProperties[] = "'messageSessionDeleted' can't be null";
        }
        if ($this->container['messageCacheClear'] === null) {
            $invalidProperties[] = "'messageCacheClear' can't be null";
        }
        if ($this->container['messageIncomingCacheClear'] === null) {
            $invalidProperties[] = "'messageIncomingCacheClear' can't be null";
        }
        if ($this->container['messageScheduleAdded'] === null) {
            $invalidProperties[] = "'messageScheduleAdded' can't be null";
        }
        if ($this->container['messageScheduleStateChanged'] === null) {
            $invalidProperties[] = "'messageScheduleStateChanged' can't be null";
        }
        if ($this->container['messageScheduleDeleted'] === null) {
            $invalidProperties[] = "'messageScheduleDeleted' can't be null";
        }
        if ($this->container['messageScheduleNotSentStateChanged'] === null) {
            $invalidProperties[] = "'messageScheduleNotSentStateChanged' can't be null";
        }
        if ($this->container['messageScheduleCacheClear'] === null) {
            $invalidProperties[] = "'messageScheduleCacheClear' can't be null";
        }
        if ($this->container['messageTemplateCacheClear'] === null) {
            $invalidProperties[] = "'messageTemplateCacheClear' can't be null";
        }
        if ($this->container['callFinished'] === null) {
            $invalidProperties[] = "'callFinished' can't be null";
        }
        if ($this->container['chatCreated'] === null) {
            $invalidProperties[] = "'chatCreated' can't be null";
        }
        if ($this->container['chatMarkedAsRead'] === null) {
            $invalidProperties[] = "'chatMarkedAsRead' can't be null";
        }
        if ($this->container['chatMuted'] === null) {
            $invalidProperties[] = "'chatMuted' can't be null";
        }
        if ($this->container['chatUnmuted'] === null) {
            $invalidProperties[] = "'chatUnmuted' can't be null";
        }
        if ($this->container['chatPinned'] === null) {
            $invalidProperties[] = "'chatPinned' can't be null";
        }
        if ($this->container['chatUnpinned'] === null) {
            $invalidProperties[] = "'chatUnpinned' can't be null";
        }
        if ($this->container['chatDeleted'] === null) {
            $invalidProperties[] = "'chatDeleted' can't be null";
        }
        if ($this->container['chatClosed'] === null) {
            $invalidProperties[] = "'chatClosed' can't be null";
        }
        if ($this->container['chatReopened'] === null) {
            $invalidProperties[] = "'chatReopened' can't be null";
        }
        if ($this->container['chatActivated'] === null) {
            $invalidProperties[] = "'chatActivated' can't be null";
        }
        if ($this->container['chatCacheClear'] === null) {
            $invalidProperties[] = "'chatCacheClear' can't be null";
        }
        if ($this->container['chatRead'] === null) {
            $invalidProperties[] = "'chatRead' can't be null";
        }
        if ($this->container['chatUnread'] === null) {
            $invalidProperties[] = "'chatUnread' can't be null";
        }
        if ($this->container['chatAssigneeChanged'] === null) {
            $invalidProperties[] = "'chatAssigneeChanged' can't be null";
        }
        if ($this->container['chatTagsChanged'] === null) {
            $invalidProperties[] = "'chatTagsChanged' can't be null";
        }
        if ($this->container['chatConversationEnded'] === null) {
            $invalidProperties[] = "'chatConversationEnded' can't be null";
        }
        if ($this->container['chatUpdated'] === null) {
            $invalidProperties[] = "'chatUpdated' can't be null";
        }
        if ($this->container['liveChatAgentChanged'] === null) {
            $invalidProperties[] = "'liveChatAgentChanged' can't be null";
        }
        if ($this->container['liveChatRated'] === null) {
            $invalidProperties[] = "'liveChatRated' can't be null";
        }
        if ($this->container['webWidgetUpdated'] === null) {
            $invalidProperties[] = "'webWidgetUpdated' can't be null";
        }
        if ($this->container['webWidgetDeleted'] === null) {
            $invalidProperties[] = "'webWidgetDeleted' can't be null";
        }
        if ($this->container['contactAdded'] === null) {
            $invalidProperties[] = "'contactAdded' can't be null";
        }
        if ($this->container['contactDeleted'] === null) {
            $invalidProperties[] = "'contactDeleted' can't be null";
        }
        if ($this->container['contactStateChanged'] === null) {
            $invalidProperties[] = "'contactStateChanged' can't be null";
        }
        if ($this->container['contactUnsubscribed'] === null) {
            $invalidProperties[] = "'contactUnsubscribed' can't be null";
        }
        if ($this->container['contactResubscribed'] === null) {
            $invalidProperties[] = "'contactResubscribed' can't be null";
        }
        if ($this->container['contactNoteAdded'] === null) {
            $invalidProperties[] = "'contactNoteAdded' can't be null";
        }
        if ($this->container['contactNoteDeleted'] === null) {
            $invalidProperties[] = "'contactNoteDeleted' can't be null";
        }
        if ($this->container['contactNoteStateChanged'] === null) {
            $invalidProperties[] = "'contactNoteStateChanged' can't be null";
        }
        if ($this->container['listAdded'] === null) {
            $invalidProperties[] = "'listAdded' can't be null";
        }
        if ($this->container['listDeleted'] === null) {
            $invalidProperties[] = "'listDeleted' can't be null";
        }
        if ($this->container['listStateChanged'] === null) {
            $invalidProperties[] = "'listStateChanged' can't be null";
        }
        if ($this->container['listCountMembersUpdated'] === null) {
            $invalidProperties[] = "'listCountMembersUpdated' can't be null";
        }
        if ($this->container['contactWipeEnd'] === null) {
            $invalidProperties[] = "'contactWipeEnd' can't be null";
        }
        if ($this->container['contactImportEnd'] === null) {
            $invalidProperties[] = "'contactImportEnd' can't be null";
        }
        if ($this->container['contactCacheClear'] === null) {
            $invalidProperties[] = "'contactCacheClear' can't be null";
        }
        if ($this->container['listCacheClear'] === null) {
            $invalidProperties[] = "'listCacheClear' can't be null";
        }
        if ($this->container['customFieldsCacheClear'] === null) {
            $invalidProperties[] = "'customFieldsCacheClear' can't be null";
        }
        if ($this->container['progressCarrierBulkLookup'] === null) {
            $invalidProperties[] = "'progressCarrierBulkLookup' can't be null";
        }
        if ($this->container['progressEmailBulkLookup'] === null) {
            $invalidProperties[] = "'progressEmailBulkLookup' can't be null";
        }
        if ($this->container['progressSubAccountBulkImport'] === null) {
            $invalidProperties[] = "'progressSubAccountBulkImport' can't be null";
        }
        if ($this->container['progressContactBulkImport'] === null) {
            $invalidProperties[] = "'progressContactBulkImport' can't be null";
        }
        if ($this->container['forceRefreshWebApp'] === null) {
            $invalidProperties[] = "'forceRefreshWebApp' can't be null";
        }
        if ($this->container['chatSenderSettingsChanged'] === null) {
            $invalidProperties[] = "'chatSenderSettingsChanged' can't be null";
        }
        if ($this->container['countrySenderSettingsChanged'] === null) {
            $invalidProperties[] = "'countrySenderSettingsChanged' can't be null";
        }
        if ($this->container['chatSummaryChunk'] === null) {
            $invalidProperties[] = "'chatSummaryChunk' can't be null";
        }
        if ($this->container['chatWaysToReplyChunk'] === null) {
            $invalidProperties[] = "'chatWaysToReplyChunk' can't be null";
        }
        if ($this->container['chatSuggestedReplyChunk'] === null) {
            $invalidProperties[] = "'chatSuggestedReplyChunk' can't be null";
        }
        if ($this->container['userSubscriptionChanged'] === null) {
            $invalidProperties[] = "'userSubscriptionChanged' can't be null";
        }
        if ($this->container['userSubscriptionDeleted'] === null) {
            $invalidProperties[] = "'userSubscriptionDeleted' can't be null";
        }
        if ($this->container['taskCreated'] === null) {
            $invalidProperties[] = "'taskCreated' can't be null";
        }
        if ($this->container['taskUpdated'] === null) {
            $invalidProperties[] = "'taskUpdated' can't be null";
        }
        if ($this->container['taskReordered'] === null) {
            $invalidProperties[] = "'taskReordered' can't be null";
        }
        if ($this->container['taskDeleted'] === null) {
            $invalidProperties[] = "'taskDeleted' can't be null";
        }
        if ($this->container['taskMovedAll'] === null) {
            $invalidProperties[] = "'taskMovedAll' can't be null";
        }
        if ($this->container['taskStageCreated'] === null) {
            $invalidProperties[] = "'taskStageCreated' can't be null";
        }
        if ($this->container['taskStageUpdated'] === null) {
            $invalidProperties[] = "'taskStageUpdated' can't be null";
        }
        if ($this->container['taskStageDeleted'] === null) {
            $invalidProperties[] = "'taskStageDeleted' can't be null";
        }
        if ($this->container['taskBoardCreated'] === null) {
            $invalidProperties[] = "'taskBoardCreated' can't be null";
        }
        if ($this->container['taskBoardUpdated'] === null) {
            $invalidProperties[] = "'taskBoardUpdated' can't be null";
        }
        if ($this->container['taskBoardReordered'] === null) {
            $invalidProperties[] = "'taskBoardReordered' can't be null";
        }
        if ($this->container['taskBoardDeleted'] === null) {
            $invalidProperties[] = "'taskBoardDeleted' can't be null";
        }
        if ($this->container['taskBoardArchived'] === null) {
            $invalidProperties[] = "'taskBoardArchived' can't be null";
        }
        if ($this->container['taskChecklistCreated'] === null) {
            $invalidProperties[] = "'taskChecklistCreated' can't be null";
        }
        if ($this->container['taskChecklistUpdated'] === null) {
            $invalidProperties[] = "'taskChecklistUpdated' can't be null";
        }
        if ($this->container['taskChecklistDeleted'] === null) {
            $invalidProperties[] = "'taskChecklistDeleted' can't be null";
        }
        if ($this->container['taskChecklistBulkMarked'] === null) {
            $invalidProperties[] = "'taskChecklistBulkMarked' can't be null";
        }
        if ($this->container['taskChecklistItemCreated'] === null) {
            $invalidProperties[] = "'taskChecklistItemCreated' can't be null";
        }
        if ($this->container['taskChecklistItemUpdated'] === null) {
            $invalidProperties[] = "'taskChecklistItemUpdated' can't be null";
        }
        if ($this->container['taskChecklistItemDeleted'] === null) {
            $invalidProperties[] = "'taskChecklistItemDeleted' can't be null";
        }
        if ($this->container['taskCommentCreated'] === null) {
            $invalidProperties[] = "'taskCommentCreated' can't be null";
        }
        if ($this->container['taskCommentDeleted'] === null) {
            $invalidProperties[] = "'taskCommentDeleted' can't be null";
        }
        if ($this->container['pinnedContactAdded'] === null) {
            $invalidProperties[] = "'pinnedContactAdded' can't be null";
        }
        if ($this->container['pinnedContactRemoved'] === null) {
            $invalidProperties[] = "'pinnedContactRemoved' can't be null";
        }
        if ($this->container['pinnedContactReordered'] === null) {
            $invalidProperties[] = "'pinnedContactReordered' can't be null";
        }
        if ($this->container['pinnedContactStateChanged'] === null) {
            $invalidProperties[] = "'pinnedContactStateChanged' can't be null";
        }
        if ($this->container['whatsappAccountAdded'] === null) {
            $invalidProperties[] = "'whatsappAccountAdded' can't be null";
        }
        if ($this->container['whatsappAccountRemoved'] === null) {
            $invalidProperties[] = "'whatsappAccountRemoved' can't be null";
        }
        if ($this->container['whatsappAccountChanged'] === null) {
            $invalidProperties[] = "'whatsappAccountChanged' can't be null";
        }
        if ($this->container['facebookPageAdded'] === null) {
            $invalidProperties[] = "'facebookPageAdded' can't be null";
        }
        if ($this->container['facebookPageRemoved'] === null) {
            $invalidProperties[] = "'facebookPageRemoved' can't be null";
        }
        if ($this->container['facebookPageChanged'] === null) {
            $invalidProperties[] = "'facebookPageChanged' can't be null";
        }
        if ($this->container['instagramAccountAdded'] === null) {
            $invalidProperties[] = "'instagramAccountAdded' can't be null";
        }
        if ($this->container['instagramAccountRemoved'] === null) {
            $invalidProperties[] = "'instagramAccountRemoved' can't be null";
        }
        if ($this->container['instagramAccountChanged'] === null) {
            $invalidProperties[] = "'instagramAccountChanged' can't be null";
        }
        if ($this->container['unreadTicketsCountUpdated'] === null) {
            $invalidProperties[] = "'unreadTicketsCountUpdated' can't be null";
        }
        if ($this->container['ticketDeleted'] === null) {
            $invalidProperties[] = "'ticketDeleted' can't be null";
        }
        if ($this->container['ticketUpdated'] === null) {
            $invalidProperties[] = "'ticketUpdated' can't be null";
        }
        if ($this->container['ticketCreated'] === null) {
            $invalidProperties[] = "'ticketCreated' can't be null";
        }
        if ($this->container['ticketBulkUpdated'] === null) {
            $invalidProperties[] = "'ticketBulkUpdated' can't be null";
        }
        if ($this->container['ticketBulkDeleted'] === null) {
            $invalidProperties[] = "'ticketBulkDeleted' can't be null";
        }
        if ($this->container['ticketMessageCreated'] === null) {
            $invalidProperties[] = "'ticketMessageCreated' can't be null";
        }
        if ($this->container['ticketMessageUpdated'] === null) {
            $invalidProperties[] = "'ticketMessageUpdated' can't be null";
        }
        if ($this->container['ticketMessageDeleted'] === null) {
            $invalidProperties[] = "'ticketMessageDeleted' can't be null";
        }
        if ($this->container['subAccountsClosed'] === null) {
            $invalidProperties[] = "'subAccountsClosed' can't be null";
        }
        if ($this->container['userInvited'] === null) {
            $invalidProperties[] = "'userInvited' can't be null";
        }
        if ($this->container['filteredViewCreated'] === null) {
            $invalidProperties[] = "'filteredViewCreated' can't be null";
        }
        if ($this->container['filteredViewCountUpdated'] === null) {
            $invalidProperties[] = "'filteredViewCountUpdated' can't be null";
        }
        if ($this->container['filteredViewDeleted'] === null) {
            $invalidProperties[] = "'filteredViewDeleted' can't be null";
        }
        if ($this->container['forwardingInboxWasVerified'] === null) {
            $invalidProperties[] = "'forwardingInboxWasVerified' can't be null";
        }
        if ($this->container['forwardingInboxCheckWasFailed'] === null) {
            $invalidProperties[] = "'forwardingInboxCheckWasFailed' can't be null";
        }
        if ($this->container['forwardingInboxVerificationLinkWasParsed'] === null) {
            $invalidProperties[] = "'forwardingInboxVerificationLinkWasParsed' can't be null";
        }
        if ($this->container['tendlcLinkNumberStatusUpdated'] === null) {
            $invalidProperties[] = "'tendlcLinkNumberStatusUpdated' can't be null";
        }
        if ($this->container['channelPresence'] === null) {
            $invalidProperties[] = "'channelPresence' can't be null";
        }
        if ($this->container['dealCreated'] === null) {
            $invalidProperties[] = "'dealCreated' can't be null";
        }
        if ($this->container['dealUpdated'] === null) {
            $invalidProperties[] = "'dealUpdated' can't be null";
        }
        if ($this->container['dealDeleted'] === null) {
            $invalidProperties[] = "'dealDeleted' can't be null";
        }
        if ($this->container['dealMoved'] === null) {
            $invalidProperties[] = "'dealMoved' can't be null";
        }
        if ($this->container['dealStageCreated'] === null) {
            $invalidProperties[] = "'dealStageCreated' can't be null";
        }
        if ($this->container['dealStageUpdated'] === null) {
            $invalidProperties[] = "'dealStageUpdated' can't be null";
        }
        if ($this->container['dealStageDeleted'] === null) {
            $invalidProperties[] = "'dealStageDeleted' can't be null";
        }
        if ($this->container['dealPipelineCreated'] === null) {
            $invalidProperties[] = "'dealPipelineCreated' can't be null";
        }
        if ($this->container['dealPipelineUpdated'] === null) {
            $invalidProperties[] = "'dealPipelineUpdated' can't be null";
        }
        if ($this->container['dealPipelineDeleted'] === null) {
            $invalidProperties[] = "'dealPipelineDeleted' can't be null";
        }
        if ($this->container['dealPipelineArchived'] === null) {
            $invalidProperties[] = "'dealPipelineArchived' can't be null";
        }
        if ($this->container['dealPipelineReordered'] === null) {
            $invalidProperties[] = "'dealPipelineReordered' can't be null";
        }
        if ($this->container['dealActivityUpdated'] === null) {
            $invalidProperties[] = "'dealActivityUpdated' can't be null";
        }
        if ($this->container['dealActivityItemCreated'] === null) {
            $invalidProperties[] = "'dealActivityItemCreated' can't be null";
        }
        if ($this->container['dealActivityItemUpdated'] === null) {
            $invalidProperties[] = "'dealActivityItemUpdated' can't be null";
        }
        if ($this->container['dealActivityItemDeleted'] === null) {
            $invalidProperties[] = "'dealActivityItemDeleted' can't be null";
        }
        if ($this->container['dealActivityItemBulkMarked'] === null) {
            $invalidProperties[] = "'dealActivityItemBulkMarked' can't be null";
        }
        if ($this->container['dealTimelineItemDeleted'] === null) {
            $invalidProperties[] = "'dealTimelineItemDeleted' can't be null";
        }
        if ($this->container['dealTimelineItemCreated'] === null) {
            $invalidProperties[] = "'dealTimelineItemCreated' can't be null";
        }
        if ($this->container['aIAssistantCreated'] === null) {
            $invalidProperties[] = "'aIAssistantCreated' can't be null";
        }
        if ($this->container['aIAssistantState'] === null) {
            $invalidProperties[] = "'aIAssistantState' can't be null";
        }
        if ($this->container['aIAssistantDeleted'] === null) {
            $invalidProperties[] = "'aIAssistantDeleted' can't be null";
        }
        if ($this->container['aIAssistantLinkDeleted'] === null) {
            $invalidProperties[] = "'aIAssistantLinkDeleted' can't be null";
        }
        if ($this->container['aIAssistantLinkState'] === null) {
            $invalidProperties[] = "'aIAssistantLinkState' can't be null";
        }
        if ($this->container['aIAssistantLinkCreated'] === null) {
            $invalidProperties[] = "'aIAssistantLinkCreated' can't be null";
        }
        if ($this->container['aIAssistantSubLinkState'] === null) {
            $invalidProperties[] = "'aIAssistantSubLinkState' can't be null";
        }
        if ($this->container['aIAssistantSubLinkCreated'] === null) {
            $invalidProperties[] = "'aIAssistantSubLinkCreated' can't be null";
        }
        if ($this->container['emailCampaignEmailSenderCreated'] === null) {
            $invalidProperties[] = "'emailCampaignEmailSenderCreated' can't be null";
        }
        if ($this->container['emailCampaignEmailSenderUpdated'] === null) {
            $invalidProperties[] = "'emailCampaignEmailSenderUpdated' can't be null";
        }
        if ($this->container['emailCampaignEmailSenderDeleted'] === null) {
            $invalidProperties[] = "'emailCampaignEmailSenderDeleted' can't be null";
        }
        if ($this->container['emailCampaignEmailSenderVerified'] === null) {
            $invalidProperties[] = "'emailCampaignEmailSenderVerified' can't be null";
        }
        if ($this->container['emailCampaignDomainCreated'] === null) {
            $invalidProperties[] = "'emailCampaignDomainCreated' can't be null";
        }
        if ($this->container['emailCampaignDomainDeleted'] === null) {
            $invalidProperties[] = "'emailCampaignDomainDeleted' can't be null";
        }
        if ($this->container['emailCampaignDomainVerified'] === null) {
            $invalidProperties[] = "'emailCampaignDomainVerified' can't be null";
        }
        if ($this->container['emailCampaignDomainDkimVerified'] === null) {
            $invalidProperties[] = "'emailCampaignDomainDkimVerified' can't be null";
        }
        if ($this->container['emailCampaignDomainReturnPathVerified'] === null) {
            $invalidProperties[] = "'emailCampaignDomainReturnPathVerified' can't be null";
        }
        if ($this->container['emailCampaignBulkProcessProgress'] === null) {
            $invalidProperties[] = "'emailCampaignBulkProcessProgress' can't be null";
        }
        if ($this->container['smsCampaignInvalidated'] === null) {
            $invalidProperties[] = "'smsCampaignInvalidated' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets systemCacheClear
     *
     * @return int
     */
    public function getSystemCacheClear()
    {
        return $this->container['systemCacheClear'];
    }

    /**
     * Sets systemCacheClear
     *
     * @param int $systemCacheClear systemCacheClear
     *
     * @return $this
     */
    public function setSystemCacheClear($systemCacheClear)
    {
        $this->container['systemCacheClear'] = $systemCacheClear;

        return $this;
    }

    /**
     * Gets systemExit
     *
     * @return int
     */
    public function getSystemExit()
    {
        return $this->container['systemExit'];
    }

    /**
     * Sets systemExit
     *
     * @param int $systemExit systemExit
     *
     * @return $this
     */
    public function setSystemExit($systemExit)
    {
        $this->container['systemExit'] = $systemExit;

        return $this;
    }

    /**
     * Gets systemAlert
     *
     * @return int
     */
    public function getSystemAlert()
    {
        return $this->container['systemAlert'];
    }

    /**
     * Sets systemAlert
     *
     * @param int $systemAlert systemAlert
     *
     * @return $this
     */
    public function setSystemAlert($systemAlert)
    {
        $this->container['systemAlert'] = $systemAlert;

        return $this;
    }

    /**
     * Gets systemAccountStateChanged
     *
     * @return int
     */
    public function getSystemAccountStateChanged()
    {
        return $this->container['systemAccountStateChanged'];
    }

    /**
     * Sets systemAccountStateChanged
     *
     * @param int $systemAccountStateChanged systemAccountStateChanged
     *
     * @return $this
     */
    public function setSystemAccountStateChanged($systemAccountStateChanged)
    {
        $this->container['systemAccountStateChanged'] = $systemAccountStateChanged;

        return $this;
    }

    /**
     * Gets systemAccountAcceptTermsUpdate
     *
     * @return int
     */
    public function getSystemAccountAcceptTermsUpdate()
    {
        return $this->container['systemAccountAcceptTermsUpdate'];
    }

    /**
     * Sets systemAccountAcceptTermsUpdate
     *
     * @param int $systemAccountAcceptTermsUpdate systemAccountAcceptTermsUpdate
     *
     * @return $this
     */
    public function setSystemAccountAcceptTermsUpdate($systemAccountAcceptTermsUpdate)
    {
        $this->container['systemAccountAcceptTermsUpdate'] = $systemAccountAcceptTermsUpdate;

        return $this;
    }

    /**
     * Gets systemAccountClosed
     *
     * @return int
     */
    public function getSystemAccountClosed()
    {
        return $this->container['systemAccountClosed'];
    }

    /**
     * Sets systemAccountClosed
     *
     * @param int $systemAccountClosed systemAccountClosed
     *
     * @return $this
     */
    public function setSystemAccountClosed($systemAccountClosed)
    {
        $this->container['systemAccountClosed'] = $systemAccountClosed;

        return $this;
    }

    /**
     * Gets systemAccountAdditionalFields
     *
     * @return int
     */
    public function getSystemAccountAdditionalFields()
    {
        return $this->container['systemAccountAdditionalFields'];
    }

    /**
     * Sets systemAccountAdditionalFields
     *
     * @param int $systemAccountAdditionalFields systemAccountAdditionalFields
     *
     * @return $this
     */
    public function setSystemAccountAdditionalFields($systemAccountAdditionalFields)
    {
        $this->container['systemAccountAdditionalFields'] = $systemAccountAdditionalFields;

        return $this;
    }

    /**
     * Gets systemAccountPermissionsChanged
     *
     * @return int
     */
    public function getSystemAccountPermissionsChanged()
    {
        return $this->container['systemAccountPermissionsChanged'];
    }

    /**
     * Sets systemAccountPermissionsChanged
     *
     * @param int $systemAccountPermissionsChanged systemAccountPermissionsChanged
     *
     * @return $this
     */
    public function setSystemAccountPermissionsChanged($systemAccountPermissionsChanged)
    {
        $this->container['systemAccountPermissionsChanged'] = $systemAccountPermissionsChanged;

        return $this;
    }

    /**
     * Gets userProfileChanged
     *
     * @return int
     */
    public function getUserProfileChanged()
    {
        return $this->container['userProfileChanged'];
    }

    /**
     * Sets userProfileChanged
     *
     * @param int $userProfileChanged userProfileChanged
     *
     * @return $this
     */
    public function setUserProfileChanged($userProfileChanged)
    {
        $this->container['userProfileChanged'] = $userProfileChanged;

        return $this;
    }

    /**
     * Gets userBalanceChanged
     *
     * @return int
     */
    public function getUserBalanceChanged()
    {
        return $this->container['userBalanceChanged'];
    }

    /**
     * Sets userBalanceChanged
     *
     * @param int $userBalanceChanged userBalanceChanged
     *
     * @return $this
     */
    public function setUserBalanceChanged($userBalanceChanged)
    {
        $this->container['userBalanceChanged'] = $userBalanceChanged;

        return $this;
    }

    /**
     * Gets userImpersonationEnd
     *
     * @return int
     */
    public function getUserImpersonationEnd()
    {
        return $this->container['userImpersonationEnd'];
    }

    /**
     * Sets userImpersonationEnd
     *
     * @param int $userImpersonationEnd userImpersonationEnd
     *
     * @return $this
     */
    public function setUserImpersonationEnd($userImpersonationEnd)
    {
        $this->container['userImpersonationEnd'] = $userImpersonationEnd;

        return $this;
    }

    /**
     * Gets messageDeleted
     *
     * @return int
     */
    public function getMessageDeleted()
    {
        return $this->container['messageDeleted'];
    }

    /**
     * Sets messageDeleted
     *
     * @param int $messageDeleted messageDeleted
     *
     * @return $this
     */
    public function setMessageDeleted($messageDeleted)
    {
        $this->container['messageDeleted'] = $messageDeleted;

        return $this;
    }

    /**
     * Gets messageIncoming
     *
     * @return int
     */
    public function getMessageIncoming()
    {
        return $this->container['messageIncoming'];
    }

    /**
     * Sets messageIncoming
     *
     * @param int $messageIncoming messageIncoming
     *
     * @return $this
     */
    public function setMessageIncoming($messageIncoming)
    {
        $this->container['messageIncoming'] = $messageIncoming;

        return $this;
    }

    /**
     * Gets messageIncomingDeleted
     *
     * @return int
     */
    public function getMessageIncomingDeleted()
    {
        return $this->container['messageIncomingDeleted'];
    }

    /**
     * Sets messageIncomingDeleted
     *
     * @param int $messageIncomingDeleted messageIncomingDeleted
     *
     * @return $this
     */
    public function setMessageIncomingDeleted($messageIncomingDeleted)
    {
        $this->container['messageIncomingDeleted'] = $messageIncomingDeleted;

        return $this;
    }

    /**
     * Gets messageStateChanged
     *
     * @return int
     */
    public function getMessageStateChanged()
    {
        return $this->container['messageStateChanged'];
    }

    /**
     * Sets messageStateChanged
     *
     * @param int $messageStateChanged messageStateChanged
     *
     * @return $this
     */
    public function setMessageStateChanged($messageStateChanged)
    {
        $this->container['messageStateChanged'] = $messageStateChanged;

        return $this;
    }

    /**
     * Gets messageBulkEnd
     *
     * @return int
     */
    public function getMessageBulkEnd()
    {
        return $this->container['messageBulkEnd'];
    }

    /**
     * Sets messageBulkEnd
     *
     * @param int $messageBulkEnd messageBulkEnd
     *
     * @return $this
     */
    public function setMessageBulkEnd($messageBulkEnd)
    {
        $this->container['messageBulkEnd'] = $messageBulkEnd;

        return $this;
    }

    /**
     * Gets messageWipeEnd
     *
     * @return int
     */
    public function getMessageWipeEnd()
    {
        return $this->container['messageWipeEnd'];
    }

    /**
     * Sets messageWipeEnd
     *
     * @param int $messageWipeEnd messageWipeEnd
     *
     * @return $this
     */
    public function setMessageWipeEnd($messageWipeEnd)
    {
        $this->container['messageWipeEnd'] = $messageWipeEnd;

        return $this;
    }

    /**
     * Gets messageSent
     *
     * @return int
     */
    public function getMessageSent()
    {
        return $this->container['messageSent'];
    }

    /**
     * Sets messageSent
     *
     * @param int $messageSent messageSent
     *
     * @return $this
     */
    public function setMessageSent($messageSent)
    {
        $this->container['messageSent'] = $messageSent;

        return $this;
    }

    /**
     * Gets messageLog
     *
     * @return int
     */
    public function getMessageLog()
    {
        return $this->container['messageLog'];
    }

    /**
     * Sets messageLog
     *
     * @param int $messageLog messageLog
     *
     * @return $this
     */
    public function setMessageLog($messageLog)
    {
        $this->container['messageLog'] = $messageLog;

        return $this;
    }

    /**
     * Gets messageNote
     *
     * @return int
     */
    public function getMessageNote()
    {
        return $this->container['messageNote'];
    }

    /**
     * Sets messageNote
     *
     * @param int $messageNote messageNote
     *
     * @return $this
     */
    public function setMessageNote($messageNote)
    {
        $this->container['messageNote'] = $messageNote;

        return $this;
    }

    /**
     * Gets messageInitial
     *
     * @return int
     */
    public function getMessageInitial()
    {
        return $this->container['messageInitial'];
    }

    /**
     * Sets messageInitial
     *
     * @param int $messageInitial messageInitial
     *
     * @return $this
     */
    public function setMessageInitial($messageInitial)
    {
        $this->container['messageInitial'] = $messageInitial;

        return $this;
    }

    /**
     * Gets lastMessageSet
     *
     * @return int
     */
    public function getLastMessageSet()
    {
        return $this->container['lastMessageSet'];
    }

    /**
     * Sets lastMessageSet
     *
     * @param int $lastMessageSet lastMessageSet
     *
     * @return $this
     */
    public function setLastMessageSet($lastMessageSet)
    {
        $this->container['lastMessageSet'] = $lastMessageSet;

        return $this;
    }

    /**
     * Gets messageSessionDeleted
     *
     * @return int
     */
    public function getMessageSessionDeleted()
    {
        return $this->container['messageSessionDeleted'];
    }

    /**
     * Sets messageSessionDeleted
     *
     * @param int $messageSessionDeleted messageSessionDeleted
     *
     * @return $this
     */
    public function setMessageSessionDeleted($messageSessionDeleted)
    {
        $this->container['messageSessionDeleted'] = $messageSessionDeleted;

        return $this;
    }

    /**
     * Gets messageCacheClear
     *
     * @return int
     */
    public function getMessageCacheClear()
    {
        return $this->container['messageCacheClear'];
    }

    /**
     * Sets messageCacheClear
     *
     * @param int $messageCacheClear messageCacheClear
     *
     * @return $this
     */
    public function setMessageCacheClear($messageCacheClear)
    {
        $this->container['messageCacheClear'] = $messageCacheClear;

        return $this;
    }

    /**
     * Gets messageIncomingCacheClear
     *
     * @return int
     */
    public function getMessageIncomingCacheClear()
    {
        return $this->container['messageIncomingCacheClear'];
    }

    /**
     * Sets messageIncomingCacheClear
     *
     * @param int $messageIncomingCacheClear messageIncomingCacheClear
     *
     * @return $this
     */
    public function setMessageIncomingCacheClear($messageIncomingCacheClear)
    {
        $this->container['messageIncomingCacheClear'] = $messageIncomingCacheClear;

        return $this;
    }

    /**
     * Gets messageScheduleAdded
     *
     * @return int
     */
    public function getMessageScheduleAdded()
    {
        return $this->container['messageScheduleAdded'];
    }

    /**
     * Sets messageScheduleAdded
     *
     * @param int $messageScheduleAdded messageScheduleAdded
     *
     * @return $this
     */
    public function setMessageScheduleAdded($messageScheduleAdded)
    {
        $this->container['messageScheduleAdded'] = $messageScheduleAdded;

        return $this;
    }

    /**
     * Gets messageScheduleStateChanged
     *
     * @return int
     */
    public function getMessageScheduleStateChanged()
    {
        return $this->container['messageScheduleStateChanged'];
    }

    /**
     * Sets messageScheduleStateChanged
     *
     * @param int $messageScheduleStateChanged messageScheduleStateChanged
     *
     * @return $this
     */
    public function setMessageScheduleStateChanged($messageScheduleStateChanged)
    {
        $this->container['messageScheduleStateChanged'] = $messageScheduleStateChanged;

        return $this;
    }

    /**
     * Gets messageScheduleDeleted
     *
     * @return int
     */
    public function getMessageScheduleDeleted()
    {
        return $this->container['messageScheduleDeleted'];
    }

    /**
     * Sets messageScheduleDeleted
     *
     * @param int $messageScheduleDeleted messageScheduleDeleted
     *
     * @return $this
     */
    public function setMessageScheduleDeleted($messageScheduleDeleted)
    {
        $this->container['messageScheduleDeleted'] = $messageScheduleDeleted;

        return $this;
    }

    /**
     * Gets messageScheduleNotSentStateChanged
     *
     * @return int
     */
    public function getMessageScheduleNotSentStateChanged()
    {
        return $this->container['messageScheduleNotSentStateChanged'];
    }

    /**
     * Sets messageScheduleNotSentStateChanged
     *
     * @param int $messageScheduleNotSentStateChanged messageScheduleNotSentStateChanged
     *
     * @return $this
     */
    public function setMessageScheduleNotSentStateChanged($messageScheduleNotSentStateChanged)
    {
        $this->container['messageScheduleNotSentStateChanged'] = $messageScheduleNotSentStateChanged;

        return $this;
    }

    /**
     * Gets messageScheduleCacheClear
     *
     * @return int
     */
    public function getMessageScheduleCacheClear()
    {
        return $this->container['messageScheduleCacheClear'];
    }

    /**
     * Sets messageScheduleCacheClear
     *
     * @param int $messageScheduleCacheClear messageScheduleCacheClear
     *
     * @return $this
     */
    public function setMessageScheduleCacheClear($messageScheduleCacheClear)
    {
        $this->container['messageScheduleCacheClear'] = $messageScheduleCacheClear;

        return $this;
    }

    /**
     * Gets messageTemplateCacheClear
     *
     * @return int
     */
    public function getMessageTemplateCacheClear()
    {
        return $this->container['messageTemplateCacheClear'];
    }

    /**
     * Sets messageTemplateCacheClear
     *
     * @param int $messageTemplateCacheClear messageTemplateCacheClear
     *
     * @return $this
     */
    public function setMessageTemplateCacheClear($messageTemplateCacheClear)
    {
        $this->container['messageTemplateCacheClear'] = $messageTemplateCacheClear;

        return $this;
    }

    /**
     * Gets callFinished
     *
     * @return int
     */
    public function getCallFinished()
    {
        return $this->container['callFinished'];
    }

    /**
     * Sets callFinished
     *
     * @param int $callFinished callFinished
     *
     * @return $this
     */
    public function setCallFinished($callFinished)
    {
        $this->container['callFinished'] = $callFinished;

        return $this;
    }

    /**
     * Gets chatCreated
     *
     * @return int
     */
    public function getChatCreated()
    {
        return $this->container['chatCreated'];
    }

    /**
     * Sets chatCreated
     *
     * @param int $chatCreated chatCreated
     *
     * @return $this
     */
    public function setChatCreated($chatCreated)
    {
        $this->container['chatCreated'] = $chatCreated;

        return $this;
    }

    /**
     * Gets chatMarkedAsRead
     *
     * @return int
     */
    public function getChatMarkedAsRead()
    {
        return $this->container['chatMarkedAsRead'];
    }

    /**
     * Sets chatMarkedAsRead
     *
     * @param int $chatMarkedAsRead chatMarkedAsRead
     *
     * @return $this
     */
    public function setChatMarkedAsRead($chatMarkedAsRead)
    {
        $this->container['chatMarkedAsRead'] = $chatMarkedAsRead;

        return $this;
    }

    /**
     * Gets chatMuted
     *
     * @return int
     */
    public function getChatMuted()
    {
        return $this->container['chatMuted'];
    }

    /**
     * Sets chatMuted
     *
     * @param int $chatMuted chatMuted
     *
     * @return $this
     */
    public function setChatMuted($chatMuted)
    {
        $this->container['chatMuted'] = $chatMuted;

        return $this;
    }

    /**
     * Gets chatUnmuted
     *
     * @return int
     */
    public function getChatUnmuted()
    {
        return $this->container['chatUnmuted'];
    }

    /**
     * Sets chatUnmuted
     *
     * @param int $chatUnmuted chatUnmuted
     *
     * @return $this
     */
    public function setChatUnmuted($chatUnmuted)
    {
        $this->container['chatUnmuted'] = $chatUnmuted;

        return $this;
    }

    /**
     * Gets chatPinned
     *
     * @return int
     */
    public function getChatPinned()
    {
        return $this->container['chatPinned'];
    }

    /**
     * Sets chatPinned
     *
     * @param int $chatPinned chatPinned
     *
     * @return $this
     */
    public function setChatPinned($chatPinned)
    {
        $this->container['chatPinned'] = $chatPinned;

        return $this;
    }

    /**
     * Gets chatUnpinned
     *
     * @return int
     */
    public function getChatUnpinned()
    {
        return $this->container['chatUnpinned'];
    }

    /**
     * Sets chatUnpinned
     *
     * @param int $chatUnpinned chatUnpinned
     *
     * @return $this
     */
    public function setChatUnpinned($chatUnpinned)
    {
        $this->container['chatUnpinned'] = $chatUnpinned;

        return $this;
    }

    /**
     * Gets chatDeleted
     *
     * @return int
     */
    public function getChatDeleted()
    {
        return $this->container['chatDeleted'];
    }

    /**
     * Sets chatDeleted
     *
     * @param int $chatDeleted chatDeleted
     *
     * @return $this
     */
    public function setChatDeleted($chatDeleted)
    {
        $this->container['chatDeleted'] = $chatDeleted;

        return $this;
    }

    /**
     * Gets chatClosed
     *
     * @return int
     */
    public function getChatClosed()
    {
        return $this->container['chatClosed'];
    }

    /**
     * Sets chatClosed
     *
     * @param int $chatClosed chatClosed
     *
     * @return $this
     */
    public function setChatClosed($chatClosed)
    {
        $this->container['chatClosed'] = $chatClosed;

        return $this;
    }

    /**
     * Gets chatReopened
     *
     * @return int
     */
    public function getChatReopened()
    {
        return $this->container['chatReopened'];
    }

    /**
     * Sets chatReopened
     *
     * @param int $chatReopened chatReopened
     *
     * @return $this
     */
    public function setChatReopened($chatReopened)
    {
        $this->container['chatReopened'] = $chatReopened;

        return $this;
    }

    /**
     * Gets chatActivated
     *
     * @return int
     */
    public function getChatActivated()
    {
        return $this->container['chatActivated'];
    }

    /**
     * Sets chatActivated
     *
     * @param int $chatActivated chatActivated
     *
     * @return $this
     */
    public function setChatActivated($chatActivated)
    {
        $this->container['chatActivated'] = $chatActivated;

        return $this;
    }

    /**
     * Gets chatCacheClear
     *
     * @return int
     */
    public function getChatCacheClear()
    {
        return $this->container['chatCacheClear'];
    }

    /**
     * Sets chatCacheClear
     *
     * @param int $chatCacheClear chatCacheClear
     *
     * @return $this
     */
    public function setChatCacheClear($chatCacheClear)
    {
        $this->container['chatCacheClear'] = $chatCacheClear;

        return $this;
    }

    /**
     * Gets chatRead
     *
     * @return int
     */
    public function getChatRead()
    {
        return $this->container['chatRead'];
    }

    /**
     * Sets chatRead
     *
     * @param int $chatRead chatRead
     *
     * @return $this
     */
    public function setChatRead($chatRead)
    {
        $this->container['chatRead'] = $chatRead;

        return $this;
    }

    /**
     * Gets chatUnread
     *
     * @return int
     */
    public function getChatUnread()
    {
        return $this->container['chatUnread'];
    }

    /**
     * Sets chatUnread
     *
     * @param int $chatUnread chatUnread
     *
     * @return $this
     */
    public function setChatUnread($chatUnread)
    {
        $this->container['chatUnread'] = $chatUnread;

        return $this;
    }

    /**
     * Gets chatAssigneeChanged
     *
     * @return int
     */
    public function getChatAssigneeChanged()
    {
        return $this->container['chatAssigneeChanged'];
    }

    /**
     * Sets chatAssigneeChanged
     *
     * @param int $chatAssigneeChanged chatAssigneeChanged
     *
     * @return $this
     */
    public function setChatAssigneeChanged($chatAssigneeChanged)
    {
        $this->container['chatAssigneeChanged'] = $chatAssigneeChanged;

        return $this;
    }

    /**
     * Gets chatTagsChanged
     *
     * @return int
     */
    public function getChatTagsChanged()
    {
        return $this->container['chatTagsChanged'];
    }

    /**
     * Sets chatTagsChanged
     *
     * @param int $chatTagsChanged chatTagsChanged
     *
     * @return $this
     */
    public function setChatTagsChanged($chatTagsChanged)
    {
        $this->container['chatTagsChanged'] = $chatTagsChanged;

        return $this;
    }

    /**
     * Gets chatConversationEnded
     *
     * @return int
     */
    public function getChatConversationEnded()
    {
        return $this->container['chatConversationEnded'];
    }

    /**
     * Sets chatConversationEnded
     *
     * @param int $chatConversationEnded chatConversationEnded
     *
     * @return $this
     */
    public function setChatConversationEnded($chatConversationEnded)
    {
        $this->container['chatConversationEnded'] = $chatConversationEnded;

        return $this;
    }

    /**
     * Gets chatUpdated
     *
     * @return int
     */
    public function getChatUpdated()
    {
        return $this->container['chatUpdated'];
    }

    /**
     * Sets chatUpdated
     *
     * @param int $chatUpdated chatUpdated
     *
     * @return $this
     */
    public function setChatUpdated($chatUpdated)
    {
        $this->container['chatUpdated'] = $chatUpdated;

        return $this;
    }

    /**
     * Gets liveChatAgentChanged
     *
     * @return int
     */
    public function getLiveChatAgentChanged()
    {
        return $this->container['liveChatAgentChanged'];
    }

    /**
     * Sets liveChatAgentChanged
     *
     * @param int $liveChatAgentChanged liveChatAgentChanged
     *
     * @return $this
     */
    public function setLiveChatAgentChanged($liveChatAgentChanged)
    {
        $this->container['liveChatAgentChanged'] = $liveChatAgentChanged;

        return $this;
    }

    /**
     * Gets liveChatRated
     *
     * @return int
     */
    public function getLiveChatRated()
    {
        return $this->container['liveChatRated'];
    }

    /**
     * Sets liveChatRated
     *
     * @param int $liveChatRated liveChatRated
     *
     * @return $this
     */
    public function setLiveChatRated($liveChatRated)
    {
        $this->container['liveChatRated'] = $liveChatRated;

        return $this;
    }

    /**
     * Gets webWidgetUpdated
     *
     * @return int
     */
    public function getWebWidgetUpdated()
    {
        return $this->container['webWidgetUpdated'];
    }

    /**
     * Sets webWidgetUpdated
     *
     * @param int $webWidgetUpdated webWidgetUpdated
     *
     * @return $this
     */
    public function setWebWidgetUpdated($webWidgetUpdated)
    {
        $this->container['webWidgetUpdated'] = $webWidgetUpdated;

        return $this;
    }

    /**
     * Gets webWidgetDeleted
     *
     * @return int
     */
    public function getWebWidgetDeleted()
    {
        return $this->container['webWidgetDeleted'];
    }

    /**
     * Sets webWidgetDeleted
     *
     * @param int $webWidgetDeleted webWidgetDeleted
     *
     * @return $this
     */
    public function setWebWidgetDeleted($webWidgetDeleted)
    {
        $this->container['webWidgetDeleted'] = $webWidgetDeleted;

        return $this;
    }

    /**
     * Gets contactAdded
     *
     * @return int
     */
    public function getContactAdded()
    {
        return $this->container['contactAdded'];
    }

    /**
     * Sets contactAdded
     *
     * @param int $contactAdded contactAdded
     *
     * @return $this
     */
    public function setContactAdded($contactAdded)
    {
        $this->container['contactAdded'] = $contactAdded;

        return $this;
    }

    /**
     * Gets contactDeleted
     *
     * @return int
     */
    public function getContactDeleted()
    {
        return $this->container['contactDeleted'];
    }

    /**
     * Sets contactDeleted
     *
     * @param int $contactDeleted contactDeleted
     *
     * @return $this
     */
    public function setContactDeleted($contactDeleted)
    {
        $this->container['contactDeleted'] = $contactDeleted;

        return $this;
    }

    /**
     * Gets contactStateChanged
     *
     * @return int
     */
    public function getContactStateChanged()
    {
        return $this->container['contactStateChanged'];
    }

    /**
     * Sets contactStateChanged
     *
     * @param int $contactStateChanged contactStateChanged
     *
     * @return $this
     */
    public function setContactStateChanged($contactStateChanged)
    {
        $this->container['contactStateChanged'] = $contactStateChanged;

        return $this;
    }

    /**
     * Gets contactUnsubscribed
     *
     * @return int
     */
    public function getContactUnsubscribed()
    {
        return $this->container['contactUnsubscribed'];
    }

    /**
     * Sets contactUnsubscribed
     *
     * @param int $contactUnsubscribed contactUnsubscribed
     *
     * @return $this
     */
    public function setContactUnsubscribed($contactUnsubscribed)
    {
        $this->container['contactUnsubscribed'] = $contactUnsubscribed;

        return $this;
    }

    /**
     * Gets contactResubscribed
     *
     * @return int
     */
    public function getContactResubscribed()
    {
        return $this->container['contactResubscribed'];
    }

    /**
     * Sets contactResubscribed
     *
     * @param int $contactResubscribed contactResubscribed
     *
     * @return $this
     */
    public function setContactResubscribed($contactResubscribed)
    {
        $this->container['contactResubscribed'] = $contactResubscribed;

        return $this;
    }

    /**
     * Gets contactNoteAdded
     *
     * @return int
     */
    public function getContactNoteAdded()
    {
        return $this->container['contactNoteAdded'];
    }

    /**
     * Sets contactNoteAdded
     *
     * @param int $contactNoteAdded contactNoteAdded
     *
     * @return $this
     */
    public function setContactNoteAdded($contactNoteAdded)
    {
        $this->container['contactNoteAdded'] = $contactNoteAdded;

        return $this;
    }

    /**
     * Gets contactNoteDeleted
     *
     * @return int
     */
    public function getContactNoteDeleted()
    {
        return $this->container['contactNoteDeleted'];
    }

    /**
     * Sets contactNoteDeleted
     *
     * @param int $contactNoteDeleted contactNoteDeleted
     *
     * @return $this
     */
    public function setContactNoteDeleted($contactNoteDeleted)
    {
        $this->container['contactNoteDeleted'] = $contactNoteDeleted;

        return $this;
    }

    /**
     * Gets contactNoteStateChanged
     *
     * @return int
     */
    public function getContactNoteStateChanged()
    {
        return $this->container['contactNoteStateChanged'];
    }

    /**
     * Sets contactNoteStateChanged
     *
     * @param int $contactNoteStateChanged contactNoteStateChanged
     *
     * @return $this
     */
    public function setContactNoteStateChanged($contactNoteStateChanged)
    {
        $this->container['contactNoteStateChanged'] = $contactNoteStateChanged;

        return $this;
    }

    /**
     * Gets listAdded
     *
     * @return int
     */
    public function getListAdded()
    {
        return $this->container['listAdded'];
    }

    /**
     * Sets listAdded
     *
     * @param int $listAdded listAdded
     *
     * @return $this
     */
    public function setListAdded($listAdded)
    {
        $this->container['listAdded'] = $listAdded;

        return $this;
    }

    /**
     * Gets listDeleted
     *
     * @return int
     */
    public function getListDeleted()
    {
        return $this->container['listDeleted'];
    }

    /**
     * Sets listDeleted
     *
     * @param int $listDeleted listDeleted
     *
     * @return $this
     */
    public function setListDeleted($listDeleted)
    {
        $this->container['listDeleted'] = $listDeleted;

        return $this;
    }

    /**
     * Gets listStateChanged
     *
     * @return int
     */
    public function getListStateChanged()
    {
        return $this->container['listStateChanged'];
    }

    /**
     * Sets listStateChanged
     *
     * @param int $listStateChanged listStateChanged
     *
     * @return $this
     */
    public function setListStateChanged($listStateChanged)
    {
        $this->container['listStateChanged'] = $listStateChanged;

        return $this;
    }

    /**
     * Gets listCountMembersUpdated
     *
     * @return int
     */
    public function getListCountMembersUpdated()
    {
        return $this->container['listCountMembersUpdated'];
    }

    /**
     * Sets listCountMembersUpdated
     *
     * @param int $listCountMembersUpdated listCountMembersUpdated
     *
     * @return $this
     */
    public function setListCountMembersUpdated($listCountMembersUpdated)
    {
        $this->container['listCountMembersUpdated'] = $listCountMembersUpdated;

        return $this;
    }

    /**
     * Gets contactWipeEnd
     *
     * @return int
     */
    public function getContactWipeEnd()
    {
        return $this->container['contactWipeEnd'];
    }

    /**
     * Sets contactWipeEnd
     *
     * @param int $contactWipeEnd contactWipeEnd
     *
     * @return $this
     */
    public function setContactWipeEnd($contactWipeEnd)
    {
        $this->container['contactWipeEnd'] = $contactWipeEnd;

        return $this;
    }

    /**
     * Gets contactImportEnd
     *
     * @return int
     */
    public function getContactImportEnd()
    {
        return $this->container['contactImportEnd'];
    }

    /**
     * Sets contactImportEnd
     *
     * @param int $contactImportEnd contactImportEnd
     *
     * @return $this
     */
    public function setContactImportEnd($contactImportEnd)
    {
        $this->container['contactImportEnd'] = $contactImportEnd;

        return $this;
    }

    /**
     * Gets contactCacheClear
     *
     * @return int
     */
    public function getContactCacheClear()
    {
        return $this->container['contactCacheClear'];
    }

    /**
     * Sets contactCacheClear
     *
     * @param int $contactCacheClear contactCacheClear
     *
     * @return $this
     */
    public function setContactCacheClear($contactCacheClear)
    {
        $this->container['contactCacheClear'] = $contactCacheClear;

        return $this;
    }

    /**
     * Gets listCacheClear
     *
     * @return int
     */
    public function getListCacheClear()
    {
        return $this->container['listCacheClear'];
    }

    /**
     * Sets listCacheClear
     *
     * @param int $listCacheClear listCacheClear
     *
     * @return $this
     */
    public function setListCacheClear($listCacheClear)
    {
        $this->container['listCacheClear'] = $listCacheClear;

        return $this;
    }

    /**
     * Gets customFieldsCacheClear
     *
     * @return int
     */
    public function getCustomFieldsCacheClear()
    {
        return $this->container['customFieldsCacheClear'];
    }

    /**
     * Sets customFieldsCacheClear
     *
     * @param int $customFieldsCacheClear customFieldsCacheClear
     *
     * @return $this
     */
    public function setCustomFieldsCacheClear($customFieldsCacheClear)
    {
        $this->container['customFieldsCacheClear'] = $customFieldsCacheClear;

        return $this;
    }

    /**
     * Gets progressCarrierBulkLookup
     *
     * @return int
     */
    public function getProgressCarrierBulkLookup()
    {
        return $this->container['progressCarrierBulkLookup'];
    }

    /**
     * Sets progressCarrierBulkLookup
     *
     * @param int $progressCarrierBulkLookup progressCarrierBulkLookup
     *
     * @return $this
     */
    public function setProgressCarrierBulkLookup($progressCarrierBulkLookup)
    {
        $this->container['progressCarrierBulkLookup'] = $progressCarrierBulkLookup;

        return $this;
    }

    /**
     * Gets progressEmailBulkLookup
     *
     * @return int
     */
    public function getProgressEmailBulkLookup()
    {
        return $this->container['progressEmailBulkLookup'];
    }

    /**
     * Sets progressEmailBulkLookup
     *
     * @param int $progressEmailBulkLookup progressEmailBulkLookup
     *
     * @return $this
     */
    public function setProgressEmailBulkLookup($progressEmailBulkLookup)
    {
        $this->container['progressEmailBulkLookup'] = $progressEmailBulkLookup;

        return $this;
    }

    /**
     * Gets progressSubAccountBulkImport
     *
     * @return int
     */
    public function getProgressSubAccountBulkImport()
    {
        return $this->container['progressSubAccountBulkImport'];
    }

    /**
     * Sets progressSubAccountBulkImport
     *
     * @param int $progressSubAccountBulkImport progressSubAccountBulkImport
     *
     * @return $this
     */
    public function setProgressSubAccountBulkImport($progressSubAccountBulkImport)
    {
        $this->container['progressSubAccountBulkImport'] = $progressSubAccountBulkImport;

        return $this;
    }

    /**
     * Gets progressContactBulkImport
     *
     * @return int
     */
    public function getProgressContactBulkImport()
    {
        return $this->container['progressContactBulkImport'];
    }

    /**
     * Sets progressContactBulkImport
     *
     * @param int $progressContactBulkImport progressContactBulkImport
     *
     * @return $this
     */
    public function setProgressContactBulkImport($progressContactBulkImport)
    {
        $this->container['progressContactBulkImport'] = $progressContactBulkImport;

        return $this;
    }

    /**
     * Gets forceRefreshWebApp
     *
     * @return int
     */
    public function getForceRefreshWebApp()
    {
        return $this->container['forceRefreshWebApp'];
    }

    /**
     * Sets forceRefreshWebApp
     *
     * @param int $forceRefreshWebApp forceRefreshWebApp
     *
     * @return $this
     */
    public function setForceRefreshWebApp($forceRefreshWebApp)
    {
        $this->container['forceRefreshWebApp'] = $forceRefreshWebApp;

        return $this;
    }

    /**
     * Gets chatSenderSettingsChanged
     *
     * @return int
     */
    public function getChatSenderSettingsChanged()
    {
        return $this->container['chatSenderSettingsChanged'];
    }

    /**
     * Sets chatSenderSettingsChanged
     *
     * @param int $chatSenderSettingsChanged chatSenderSettingsChanged
     *
     * @return $this
     */
    public function setChatSenderSettingsChanged($chatSenderSettingsChanged)
    {
        $this->container['chatSenderSettingsChanged'] = $chatSenderSettingsChanged;

        return $this;
    }

    /**
     * Gets countrySenderSettingsChanged
     *
     * @return int
     */
    public function getCountrySenderSettingsChanged()
    {
        return $this->container['countrySenderSettingsChanged'];
    }

    /**
     * Sets countrySenderSettingsChanged
     *
     * @param int $countrySenderSettingsChanged countrySenderSettingsChanged
     *
     * @return $this
     */
    public function setCountrySenderSettingsChanged($countrySenderSettingsChanged)
    {
        $this->container['countrySenderSettingsChanged'] = $countrySenderSettingsChanged;

        return $this;
    }

    /**
     * Gets chatSummaryChunk
     *
     * @return int
     */
    public function getChatSummaryChunk()
    {
        return $this->container['chatSummaryChunk'];
    }

    /**
     * Sets chatSummaryChunk
     *
     * @param int $chatSummaryChunk chatSummaryChunk
     *
     * @return $this
     */
    public function setChatSummaryChunk($chatSummaryChunk)
    {
        $this->container['chatSummaryChunk'] = $chatSummaryChunk;

        return $this;
    }

    /**
     * Gets chatWaysToReplyChunk
     *
     * @return int
     */
    public function getChatWaysToReplyChunk()
    {
        return $this->container['chatWaysToReplyChunk'];
    }

    /**
     * Sets chatWaysToReplyChunk
     *
     * @param int $chatWaysToReplyChunk chatWaysToReplyChunk
     *
     * @return $this
     */
    public function setChatWaysToReplyChunk($chatWaysToReplyChunk)
    {
        $this->container['chatWaysToReplyChunk'] = $chatWaysToReplyChunk;

        return $this;
    }

    /**
     * Gets chatSuggestedReplyChunk
     *
     * @return int
     */
    public function getChatSuggestedReplyChunk()
    {
        return $this->container['chatSuggestedReplyChunk'];
    }

    /**
     * Sets chatSuggestedReplyChunk
     *
     * @param int $chatSuggestedReplyChunk chatSuggestedReplyChunk
     *
     * @return $this
     */
    public function setChatSuggestedReplyChunk($chatSuggestedReplyChunk)
    {
        $this->container['chatSuggestedReplyChunk'] = $chatSuggestedReplyChunk;

        return $this;
    }

    /**
     * Gets userSubscriptionChanged
     *
     * @return int
     */
    public function getUserSubscriptionChanged()
    {
        return $this->container['userSubscriptionChanged'];
    }

    /**
     * Sets userSubscriptionChanged
     *
     * @param int $userSubscriptionChanged userSubscriptionChanged
     *
     * @return $this
     */
    public function setUserSubscriptionChanged($userSubscriptionChanged)
    {
        $this->container['userSubscriptionChanged'] = $userSubscriptionChanged;

        return $this;
    }

    /**
     * Gets userSubscriptionDeleted
     *
     * @return int
     */
    public function getUserSubscriptionDeleted()
    {
        return $this->container['userSubscriptionDeleted'];
    }

    /**
     * Sets userSubscriptionDeleted
     *
     * @param int $userSubscriptionDeleted userSubscriptionDeleted
     *
     * @return $this
     */
    public function setUserSubscriptionDeleted($userSubscriptionDeleted)
    {
        $this->container['userSubscriptionDeleted'] = $userSubscriptionDeleted;

        return $this;
    }

    /**
     * Gets taskCreated
     *
     * @return int
     */
    public function getTaskCreated()
    {
        return $this->container['taskCreated'];
    }

    /**
     * Sets taskCreated
     *
     * @param int $taskCreated taskCreated
     *
     * @return $this
     */
    public function setTaskCreated($taskCreated)
    {
        $this->container['taskCreated'] = $taskCreated;

        return $this;
    }

    /**
     * Gets taskUpdated
     *
     * @return int
     */
    public function getTaskUpdated()
    {
        return $this->container['taskUpdated'];
    }

    /**
     * Sets taskUpdated
     *
     * @param int $taskUpdated taskUpdated
     *
     * @return $this
     */
    public function setTaskUpdated($taskUpdated)
    {
        $this->container['taskUpdated'] = $taskUpdated;

        return $this;
    }

    /**
     * Gets taskReordered
     *
     * @return int
     */
    public function getTaskReordered()
    {
        return $this->container['taskReordered'];
    }

    /**
     * Sets taskReordered
     *
     * @param int $taskReordered taskReordered
     *
     * @return $this
     */
    public function setTaskReordered($taskReordered)
    {
        $this->container['taskReordered'] = $taskReordered;

        return $this;
    }

    /**
     * Gets taskDeleted
     *
     * @return int
     */
    public function getTaskDeleted()
    {
        return $this->container['taskDeleted'];
    }

    /**
     * Sets taskDeleted
     *
     * @param int $taskDeleted taskDeleted
     *
     * @return $this
     */
    public function setTaskDeleted($taskDeleted)
    {
        $this->container['taskDeleted'] = $taskDeleted;

        return $this;
    }

    /**
     * Gets taskMovedAll
     *
     * @return int
     */
    public function getTaskMovedAll()
    {
        return $this->container['taskMovedAll'];
    }

    /**
     * Sets taskMovedAll
     *
     * @param int $taskMovedAll taskMovedAll
     *
     * @return $this
     */
    public function setTaskMovedAll($taskMovedAll)
    {
        $this->container['taskMovedAll'] = $taskMovedAll;

        return $this;
    }

    /**
     * Gets taskStageCreated
     *
     * @return int
     */
    public function getTaskStageCreated()
    {
        return $this->container['taskStageCreated'];
    }

    /**
     * Sets taskStageCreated
     *
     * @param int $taskStageCreated taskStageCreated
     *
     * @return $this
     */
    public function setTaskStageCreated($taskStageCreated)
    {
        $this->container['taskStageCreated'] = $taskStageCreated;

        return $this;
    }

    /**
     * Gets taskStageUpdated
     *
     * @return int
     */
    public function getTaskStageUpdated()
    {
        return $this->container['taskStageUpdated'];
    }

    /**
     * Sets taskStageUpdated
     *
     * @param int $taskStageUpdated taskStageUpdated
     *
     * @return $this
     */
    public function setTaskStageUpdated($taskStageUpdated)
    {
        $this->container['taskStageUpdated'] = $taskStageUpdated;

        return $this;
    }

    /**
     * Gets taskStageDeleted
     *
     * @return int
     */
    public function getTaskStageDeleted()
    {
        return $this->container['taskStageDeleted'];
    }

    /**
     * Sets taskStageDeleted
     *
     * @param int $taskStageDeleted taskStageDeleted
     *
     * @return $this
     */
    public function setTaskStageDeleted($taskStageDeleted)
    {
        $this->container['taskStageDeleted'] = $taskStageDeleted;

        return $this;
    }

    /**
     * Gets taskBoardCreated
     *
     * @return int
     */
    public function getTaskBoardCreated()
    {
        return $this->container['taskBoardCreated'];
    }

    /**
     * Sets taskBoardCreated
     *
     * @param int $taskBoardCreated taskBoardCreated
     *
     * @return $this
     */
    public function setTaskBoardCreated($taskBoardCreated)
    {
        $this->container['taskBoardCreated'] = $taskBoardCreated;

        return $this;
    }

    /**
     * Gets taskBoardUpdated
     *
     * @return int
     */
    public function getTaskBoardUpdated()
    {
        return $this->container['taskBoardUpdated'];
    }

    /**
     * Sets taskBoardUpdated
     *
     * @param int $taskBoardUpdated taskBoardUpdated
     *
     * @return $this
     */
    public function setTaskBoardUpdated($taskBoardUpdated)
    {
        $this->container['taskBoardUpdated'] = $taskBoardUpdated;

        return $this;
    }

    /**
     * Gets taskBoardReordered
     *
     * @return int
     */
    public function getTaskBoardReordered()
    {
        return $this->container['taskBoardReordered'];
    }

    /**
     * Sets taskBoardReordered
     *
     * @param int $taskBoardReordered taskBoardReordered
     *
     * @return $this
     */
    public function setTaskBoardReordered($taskBoardReordered)
    {
        $this->container['taskBoardReordered'] = $taskBoardReordered;

        return $this;
    }

    /**
     * Gets taskBoardDeleted
     *
     * @return int
     */
    public function getTaskBoardDeleted()
    {
        return $this->container['taskBoardDeleted'];
    }

    /**
     * Sets taskBoardDeleted
     *
     * @param int $taskBoardDeleted taskBoardDeleted
     *
     * @return $this
     */
    public function setTaskBoardDeleted($taskBoardDeleted)
    {
        $this->container['taskBoardDeleted'] = $taskBoardDeleted;

        return $this;
    }

    /**
     * Gets taskBoardArchived
     *
     * @return int
     */
    public function getTaskBoardArchived()
    {
        return $this->container['taskBoardArchived'];
    }

    /**
     * Sets taskBoardArchived
     *
     * @param int $taskBoardArchived taskBoardArchived
     *
     * @return $this
     */
    public function setTaskBoardArchived($taskBoardArchived)
    {
        $this->container['taskBoardArchived'] = $taskBoardArchived;

        return $this;
    }

    /**
     * Gets taskChecklistCreated
     *
     * @return int
     */
    public function getTaskChecklistCreated()
    {
        return $this->container['taskChecklistCreated'];
    }

    /**
     * Sets taskChecklistCreated
     *
     * @param int $taskChecklistCreated taskChecklistCreated
     *
     * @return $this
     */
    public function setTaskChecklistCreated($taskChecklistCreated)
    {
        $this->container['taskChecklistCreated'] = $taskChecklistCreated;

        return $this;
    }

    /**
     * Gets taskChecklistUpdated
     *
     * @return int
     */
    public function getTaskChecklistUpdated()
    {
        return $this->container['taskChecklistUpdated'];
    }

    /**
     * Sets taskChecklistUpdated
     *
     * @param int $taskChecklistUpdated taskChecklistUpdated
     *
     * @return $this
     */
    public function setTaskChecklistUpdated($taskChecklistUpdated)
    {
        $this->container['taskChecklistUpdated'] = $taskChecklistUpdated;

        return $this;
    }

    /**
     * Gets taskChecklistDeleted
     *
     * @return int
     */
    public function getTaskChecklistDeleted()
    {
        return $this->container['taskChecklistDeleted'];
    }

    /**
     * Sets taskChecklistDeleted
     *
     * @param int $taskChecklistDeleted taskChecklistDeleted
     *
     * @return $this
     */
    public function setTaskChecklistDeleted($taskChecklistDeleted)
    {
        $this->container['taskChecklistDeleted'] = $taskChecklistDeleted;

        return $this;
    }

    /**
     * Gets taskChecklistBulkMarked
     *
     * @return int
     */
    public function getTaskChecklistBulkMarked()
    {
        return $this->container['taskChecklistBulkMarked'];
    }

    /**
     * Sets taskChecklistBulkMarked
     *
     * @param int $taskChecklistBulkMarked taskChecklistBulkMarked
     *
     * @return $this
     */
    public function setTaskChecklistBulkMarked($taskChecklistBulkMarked)
    {
        $this->container['taskChecklistBulkMarked'] = $taskChecklistBulkMarked;

        return $this;
    }

    /**
     * Gets taskChecklistItemCreated
     *
     * @return int
     */
    public function getTaskChecklistItemCreated()
    {
        return $this->container['taskChecklistItemCreated'];
    }

    /**
     * Sets taskChecklistItemCreated
     *
     * @param int $taskChecklistItemCreated taskChecklistItemCreated
     *
     * @return $this
     */
    public function setTaskChecklistItemCreated($taskChecklistItemCreated)
    {
        $this->container['taskChecklistItemCreated'] = $taskChecklistItemCreated;

        return $this;
    }

    /**
     * Gets taskChecklistItemUpdated
     *
     * @return int
     */
    public function getTaskChecklistItemUpdated()
    {
        return $this->container['taskChecklistItemUpdated'];
    }

    /**
     * Sets taskChecklistItemUpdated
     *
     * @param int $taskChecklistItemUpdated taskChecklistItemUpdated
     *
     * @return $this
     */
    public function setTaskChecklistItemUpdated($taskChecklistItemUpdated)
    {
        $this->container['taskChecklistItemUpdated'] = $taskChecklistItemUpdated;

        return $this;
    }

    /**
     * Gets taskChecklistItemDeleted
     *
     * @return int
     */
    public function getTaskChecklistItemDeleted()
    {
        return $this->container['taskChecklistItemDeleted'];
    }

    /**
     * Sets taskChecklistItemDeleted
     *
     * @param int $taskChecklistItemDeleted taskChecklistItemDeleted
     *
     * @return $this
     */
    public function setTaskChecklistItemDeleted($taskChecklistItemDeleted)
    {
        $this->container['taskChecklistItemDeleted'] = $taskChecklistItemDeleted;

        return $this;
    }

    /**
     * Gets taskCommentCreated
     *
     * @return int
     */
    public function getTaskCommentCreated()
    {
        return $this->container['taskCommentCreated'];
    }

    /**
     * Sets taskCommentCreated
     *
     * @param int $taskCommentCreated taskCommentCreated
     *
     * @return $this
     */
    public function setTaskCommentCreated($taskCommentCreated)
    {
        $this->container['taskCommentCreated'] = $taskCommentCreated;

        return $this;
    }

    /**
     * Gets taskCommentDeleted
     *
     * @return int
     */
    public function getTaskCommentDeleted()
    {
        return $this->container['taskCommentDeleted'];
    }

    /**
     * Sets taskCommentDeleted
     *
     * @param int $taskCommentDeleted taskCommentDeleted
     *
     * @return $this
     */
    public function setTaskCommentDeleted($taskCommentDeleted)
    {
        $this->container['taskCommentDeleted'] = $taskCommentDeleted;

        return $this;
    }

    /**
     * Gets pinnedContactAdded
     *
     * @return int
     */
    public function getPinnedContactAdded()
    {
        return $this->container['pinnedContactAdded'];
    }

    /**
     * Sets pinnedContactAdded
     *
     * @param int $pinnedContactAdded pinnedContactAdded
     *
     * @return $this
     */
    public function setPinnedContactAdded($pinnedContactAdded)
    {
        $this->container['pinnedContactAdded'] = $pinnedContactAdded;

        return $this;
    }

    /**
     * Gets pinnedContactRemoved
     *
     * @return int
     */
    public function getPinnedContactRemoved()
    {
        return $this->container['pinnedContactRemoved'];
    }

    /**
     * Sets pinnedContactRemoved
     *
     * @param int $pinnedContactRemoved pinnedContactRemoved
     *
     * @return $this
     */
    public function setPinnedContactRemoved($pinnedContactRemoved)
    {
        $this->container['pinnedContactRemoved'] = $pinnedContactRemoved;

        return $this;
    }

    /**
     * Gets pinnedContactReordered
     *
     * @return int
     */
    public function getPinnedContactReordered()
    {
        return $this->container['pinnedContactReordered'];
    }

    /**
     * Sets pinnedContactReordered
     *
     * @param int $pinnedContactReordered pinnedContactReordered
     *
     * @return $this
     */
    public function setPinnedContactReordered($pinnedContactReordered)
    {
        $this->container['pinnedContactReordered'] = $pinnedContactReordered;

        return $this;
    }

    /**
     * Gets pinnedContactStateChanged
     *
     * @return int
     */
    public function getPinnedContactStateChanged()
    {
        return $this->container['pinnedContactStateChanged'];
    }

    /**
     * Sets pinnedContactStateChanged
     *
     * @param int $pinnedContactStateChanged pinnedContactStateChanged
     *
     * @return $this
     */
    public function setPinnedContactStateChanged($pinnedContactStateChanged)
    {
        $this->container['pinnedContactStateChanged'] = $pinnedContactStateChanged;

        return $this;
    }

    /**
     * Gets whatsappAccountAdded
     *
     * @return int
     */
    public function getWhatsappAccountAdded()
    {
        return $this->container['whatsappAccountAdded'];
    }

    /**
     * Sets whatsappAccountAdded
     *
     * @param int $whatsappAccountAdded whatsappAccountAdded
     *
     * @return $this
     */
    public function setWhatsappAccountAdded($whatsappAccountAdded)
    {
        $this->container['whatsappAccountAdded'] = $whatsappAccountAdded;

        return $this;
    }

    /**
     * Gets whatsappAccountRemoved
     *
     * @return int
     */
    public function getWhatsappAccountRemoved()
    {
        return $this->container['whatsappAccountRemoved'];
    }

    /**
     * Sets whatsappAccountRemoved
     *
     * @param int $whatsappAccountRemoved whatsappAccountRemoved
     *
     * @return $this
     */
    public function setWhatsappAccountRemoved($whatsappAccountRemoved)
    {
        $this->container['whatsappAccountRemoved'] = $whatsappAccountRemoved;

        return $this;
    }

    /**
     * Gets whatsappAccountChanged
     *
     * @return int
     */
    public function getWhatsappAccountChanged()
    {
        return $this->container['whatsappAccountChanged'];
    }

    /**
     * Sets whatsappAccountChanged
     *
     * @param int $whatsappAccountChanged whatsappAccountChanged
     *
     * @return $this
     */
    public function setWhatsappAccountChanged($whatsappAccountChanged)
    {
        $this->container['whatsappAccountChanged'] = $whatsappAccountChanged;

        return $this;
    }

    /**
     * Gets facebookPageAdded
     *
     * @return int
     */
    public function getFacebookPageAdded()
    {
        return $this->container['facebookPageAdded'];
    }

    /**
     * Sets facebookPageAdded
     *
     * @param int $facebookPageAdded facebookPageAdded
     *
     * @return $this
     */
    public function setFacebookPageAdded($facebookPageAdded)
    {
        $this->container['facebookPageAdded'] = $facebookPageAdded;

        return $this;
    }

    /**
     * Gets facebookPageRemoved
     *
     * @return int
     */
    public function getFacebookPageRemoved()
    {
        return $this->container['facebookPageRemoved'];
    }

    /**
     * Sets facebookPageRemoved
     *
     * @param int $facebookPageRemoved facebookPageRemoved
     *
     * @return $this
     */
    public function setFacebookPageRemoved($facebookPageRemoved)
    {
        $this->container['facebookPageRemoved'] = $facebookPageRemoved;

        return $this;
    }

    /**
     * Gets facebookPageChanged
     *
     * @return int
     */
    public function getFacebookPageChanged()
    {
        return $this->container['facebookPageChanged'];
    }

    /**
     * Sets facebookPageChanged
     *
     * @param int $facebookPageChanged facebookPageChanged
     *
     * @return $this
     */
    public function setFacebookPageChanged($facebookPageChanged)
    {
        $this->container['facebookPageChanged'] = $facebookPageChanged;

        return $this;
    }

    /**
     * Gets instagramAccountAdded
     *
     * @return int
     */
    public function getInstagramAccountAdded()
    {
        return $this->container['instagramAccountAdded'];
    }

    /**
     * Sets instagramAccountAdded
     *
     * @param int $instagramAccountAdded instagramAccountAdded
     *
     * @return $this
     */
    public function setInstagramAccountAdded($instagramAccountAdded)
    {
        $this->container['instagramAccountAdded'] = $instagramAccountAdded;

        return $this;
    }

    /**
     * Gets instagramAccountRemoved
     *
     * @return int
     */
    public function getInstagramAccountRemoved()
    {
        return $this->container['instagramAccountRemoved'];
    }

    /**
     * Sets instagramAccountRemoved
     *
     * @param int $instagramAccountRemoved instagramAccountRemoved
     *
     * @return $this
     */
    public function setInstagramAccountRemoved($instagramAccountRemoved)
    {
        $this->container['instagramAccountRemoved'] = $instagramAccountRemoved;

        return $this;
    }

    /**
     * Gets instagramAccountChanged
     *
     * @return int
     */
    public function getInstagramAccountChanged()
    {
        return $this->container['instagramAccountChanged'];
    }

    /**
     * Sets instagramAccountChanged
     *
     * @param int $instagramAccountChanged instagramAccountChanged
     *
     * @return $this
     */
    public function setInstagramAccountChanged($instagramAccountChanged)
    {
        $this->container['instagramAccountChanged'] = $instagramAccountChanged;

        return $this;
    }

    /**
     * Gets unreadTicketsCountUpdated
     *
     * @return int
     */
    public function getUnreadTicketsCountUpdated()
    {
        return $this->container['unreadTicketsCountUpdated'];
    }

    /**
     * Sets unreadTicketsCountUpdated
     *
     * @param int $unreadTicketsCountUpdated unreadTicketsCountUpdated
     *
     * @return $this
     */
    public function setUnreadTicketsCountUpdated($unreadTicketsCountUpdated)
    {
        $this->container['unreadTicketsCountUpdated'] = $unreadTicketsCountUpdated;

        return $this;
    }

    /**
     * Gets ticketDeleted
     *
     * @return int
     */
    public function getTicketDeleted()
    {
        return $this->container['ticketDeleted'];
    }

    /**
     * Sets ticketDeleted
     *
     * @param int $ticketDeleted ticketDeleted
     *
     * @return $this
     */
    public function setTicketDeleted($ticketDeleted)
    {
        $this->container['ticketDeleted'] = $ticketDeleted;

        return $this;
    }

    /**
     * Gets ticketUpdated
     *
     * @return int
     */
    public function getTicketUpdated()
    {
        return $this->container['ticketUpdated'];
    }

    /**
     * Sets ticketUpdated
     *
     * @param int $ticketUpdated ticketUpdated
     *
     * @return $this
     */
    public function setTicketUpdated($ticketUpdated)
    {
        $this->container['ticketUpdated'] = $ticketUpdated;

        return $this;
    }

    /**
     * Gets ticketCreated
     *
     * @return int
     */
    public function getTicketCreated()
    {
        return $this->container['ticketCreated'];
    }

    /**
     * Sets ticketCreated
     *
     * @param int $ticketCreated ticketCreated
     *
     * @return $this
     */
    public function setTicketCreated($ticketCreated)
    {
        $this->container['ticketCreated'] = $ticketCreated;

        return $this;
    }

    /**
     * Gets ticketBulkUpdated
     *
     * @return int
     */
    public function getTicketBulkUpdated()
    {
        return $this->container['ticketBulkUpdated'];
    }

    /**
     * Sets ticketBulkUpdated
     *
     * @param int $ticketBulkUpdated ticketBulkUpdated
     *
     * @return $this
     */
    public function setTicketBulkUpdated($ticketBulkUpdated)
    {
        $this->container['ticketBulkUpdated'] = $ticketBulkUpdated;

        return $this;
    }

    /**
     * Gets ticketBulkDeleted
     *
     * @return int
     */
    public function getTicketBulkDeleted()
    {
        return $this->container['ticketBulkDeleted'];
    }

    /**
     * Sets ticketBulkDeleted
     *
     * @param int $ticketBulkDeleted ticketBulkDeleted
     *
     * @return $this
     */
    public function setTicketBulkDeleted($ticketBulkDeleted)
    {
        $this->container['ticketBulkDeleted'] = $ticketBulkDeleted;

        return $this;
    }

    /**
     * Gets ticketMessageCreated
     *
     * @return int
     */
    public function getTicketMessageCreated()
    {
        return $this->container['ticketMessageCreated'];
    }

    /**
     * Sets ticketMessageCreated
     *
     * @param int $ticketMessageCreated ticketMessageCreated
     *
     * @return $this
     */
    public function setTicketMessageCreated($ticketMessageCreated)
    {
        $this->container['ticketMessageCreated'] = $ticketMessageCreated;

        return $this;
    }

    /**
     * Gets ticketMessageUpdated
     *
     * @return int
     */
    public function getTicketMessageUpdated()
    {
        return $this->container['ticketMessageUpdated'];
    }

    /**
     * Sets ticketMessageUpdated
     *
     * @param int $ticketMessageUpdated ticketMessageUpdated
     *
     * @return $this
     */
    public function setTicketMessageUpdated($ticketMessageUpdated)
    {
        $this->container['ticketMessageUpdated'] = $ticketMessageUpdated;

        return $this;
    }

    /**
     * Gets ticketMessageDeleted
     *
     * @return int
     */
    public function getTicketMessageDeleted()
    {
        return $this->container['ticketMessageDeleted'];
    }

    /**
     * Sets ticketMessageDeleted
     *
     * @param int $ticketMessageDeleted ticketMessageDeleted
     *
     * @return $this
     */
    public function setTicketMessageDeleted($ticketMessageDeleted)
    {
        $this->container['ticketMessageDeleted'] = $ticketMessageDeleted;

        return $this;
    }

    /**
     * Gets subAccountsClosed
     *
     * @return int
     */
    public function getSubAccountsClosed()
    {
        return $this->container['subAccountsClosed'];
    }

    /**
     * Sets subAccountsClosed
     *
     * @param int $subAccountsClosed subAccountsClosed
     *
     * @return $this
     */
    public function setSubAccountsClosed($subAccountsClosed)
    {
        $this->container['subAccountsClosed'] = $subAccountsClosed;

        return $this;
    }

    /**
     * Gets userInvited
     *
     * @return int
     */
    public function getUserInvited()
    {
        return $this->container['userInvited'];
    }

    /**
     * Sets userInvited
     *
     * @param int $userInvited userInvited
     *
     * @return $this
     */
    public function setUserInvited($userInvited)
    {
        $this->container['userInvited'] = $userInvited;

        return $this;
    }

    /**
     * Gets filteredViewCreated
     *
     * @return int
     */
    public function getFilteredViewCreated()
    {
        return $this->container['filteredViewCreated'];
    }

    /**
     * Sets filteredViewCreated
     *
     * @param int $filteredViewCreated filteredViewCreated
     *
     * @return $this
     */
    public function setFilteredViewCreated($filteredViewCreated)
    {
        $this->container['filteredViewCreated'] = $filteredViewCreated;

        return $this;
    }

    /**
     * Gets filteredViewCountUpdated
     *
     * @return int
     */
    public function getFilteredViewCountUpdated()
    {
        return $this->container['filteredViewCountUpdated'];
    }

    /**
     * Sets filteredViewCountUpdated
     *
     * @param int $filteredViewCountUpdated filteredViewCountUpdated
     *
     * @return $this
     */
    public function setFilteredViewCountUpdated($filteredViewCountUpdated)
    {
        $this->container['filteredViewCountUpdated'] = $filteredViewCountUpdated;

        return $this;
    }

    /**
     * Gets filteredViewDeleted
     *
     * @return int
     */
    public function getFilteredViewDeleted()
    {
        return $this->container['filteredViewDeleted'];
    }

    /**
     * Sets filteredViewDeleted
     *
     * @param int $filteredViewDeleted filteredViewDeleted
     *
     * @return $this
     */
    public function setFilteredViewDeleted($filteredViewDeleted)
    {
        $this->container['filteredViewDeleted'] = $filteredViewDeleted;

        return $this;
    }

    /**
     * Gets forwardingInboxWasVerified
     *
     * @return int
     */
    public function getForwardingInboxWasVerified()
    {
        return $this->container['forwardingInboxWasVerified'];
    }

    /**
     * Sets forwardingInboxWasVerified
     *
     * @param int $forwardingInboxWasVerified forwardingInboxWasVerified
     *
     * @return $this
     */
    public function setForwardingInboxWasVerified($forwardingInboxWasVerified)
    {
        $this->container['forwardingInboxWasVerified'] = $forwardingInboxWasVerified;

        return $this;
    }

    /**
     * Gets forwardingInboxCheckWasFailed
     *
     * @return int
     */
    public function getForwardingInboxCheckWasFailed()
    {
        return $this->container['forwardingInboxCheckWasFailed'];
    }

    /**
     * Sets forwardingInboxCheckWasFailed
     *
     * @param int $forwardingInboxCheckWasFailed forwardingInboxCheckWasFailed
     *
     * @return $this
     */
    public function setForwardingInboxCheckWasFailed($forwardingInboxCheckWasFailed)
    {
        $this->container['forwardingInboxCheckWasFailed'] = $forwardingInboxCheckWasFailed;

        return $this;
    }

    /**
     * Gets forwardingInboxVerificationLinkWasParsed
     *
     * @return int
     */
    public function getForwardingInboxVerificationLinkWasParsed()
    {
        return $this->container['forwardingInboxVerificationLinkWasParsed'];
    }

    /**
     * Sets forwardingInboxVerificationLinkWasParsed
     *
     * @param int $forwardingInboxVerificationLinkWasParsed forwardingInboxVerificationLinkWasParsed
     *
     * @return $this
     */
    public function setForwardingInboxVerificationLinkWasParsed($forwardingInboxVerificationLinkWasParsed)
    {
        $this->container['forwardingInboxVerificationLinkWasParsed'] = $forwardingInboxVerificationLinkWasParsed;

        return $this;
    }

    /**
     * Gets tendlcLinkNumberStatusUpdated
     *
     * @return int
     */
    public function getTendlcLinkNumberStatusUpdated()
    {
        return $this->container['tendlcLinkNumberStatusUpdated'];
    }

    /**
     * Sets tendlcLinkNumberStatusUpdated
     *
     * @param int $tendlcLinkNumberStatusUpdated tendlcLinkNumberStatusUpdated
     *
     * @return $this
     */
    public function setTendlcLinkNumberStatusUpdated($tendlcLinkNumberStatusUpdated)
    {
        $this->container['tendlcLinkNumberStatusUpdated'] = $tendlcLinkNumberStatusUpdated;

        return $this;
    }

    /**
     * Gets channelPresence
     *
     * @return int
     */
    public function getChannelPresence()
    {
        return $this->container['channelPresence'];
    }

    /**
     * Sets channelPresence
     *
     * @param int $channelPresence channelPresence
     *
     * @return $this
     */
    public function setChannelPresence($channelPresence)
    {
        $this->container['channelPresence'] = $channelPresence;

        return $this;
    }

    /**
     * Gets dealCreated
     *
     * @return int
     */
    public function getDealCreated()
    {
        return $this->container['dealCreated'];
    }

    /**
     * Sets dealCreated
     *
     * @param int $dealCreated dealCreated
     *
     * @return $this
     */
    public function setDealCreated($dealCreated)
    {
        $this->container['dealCreated'] = $dealCreated;

        return $this;
    }

    /**
     * Gets dealUpdated
     *
     * @return int
     */
    public function getDealUpdated()
    {
        return $this->container['dealUpdated'];
    }

    /**
     * Sets dealUpdated
     *
     * @param int $dealUpdated dealUpdated
     *
     * @return $this
     */
    public function setDealUpdated($dealUpdated)
    {
        $this->container['dealUpdated'] = $dealUpdated;

        return $this;
    }

    /**
     * Gets dealDeleted
     *
     * @return int
     */
    public function getDealDeleted()
    {
        return $this->container['dealDeleted'];
    }

    /**
     * Sets dealDeleted
     *
     * @param int $dealDeleted dealDeleted
     *
     * @return $this
     */
    public function setDealDeleted($dealDeleted)
    {
        $this->container['dealDeleted'] = $dealDeleted;

        return $this;
    }

    /**
     * Gets dealMoved
     *
     * @return int
     */
    public function getDealMoved()
    {
        return $this->container['dealMoved'];
    }

    /**
     * Sets dealMoved
     *
     * @param int $dealMoved dealMoved
     *
     * @return $this
     */
    public function setDealMoved($dealMoved)
    {
        $this->container['dealMoved'] = $dealMoved;

        return $this;
    }

    /**
     * Gets dealStageCreated
     *
     * @return int
     */
    public function getDealStageCreated()
    {
        return $this->container['dealStageCreated'];
    }

    /**
     * Sets dealStageCreated
     *
     * @param int $dealStageCreated dealStageCreated
     *
     * @return $this
     */
    public function setDealStageCreated($dealStageCreated)
    {
        $this->container['dealStageCreated'] = $dealStageCreated;

        return $this;
    }

    /**
     * Gets dealStageUpdated
     *
     * @return int
     */
    public function getDealStageUpdated()
    {
        return $this->container['dealStageUpdated'];
    }

    /**
     * Sets dealStageUpdated
     *
     * @param int $dealStageUpdated dealStageUpdated
     *
     * @return $this
     */
    public function setDealStageUpdated($dealStageUpdated)
    {
        $this->container['dealStageUpdated'] = $dealStageUpdated;

        return $this;
    }

    /**
     * Gets dealStageDeleted
     *
     * @return int
     */
    public function getDealStageDeleted()
    {
        return $this->container['dealStageDeleted'];
    }

    /**
     * Sets dealStageDeleted
     *
     * @param int $dealStageDeleted dealStageDeleted
     *
     * @return $this
     */
    public function setDealStageDeleted($dealStageDeleted)
    {
        $this->container['dealStageDeleted'] = $dealStageDeleted;

        return $this;
    }

    /**
     * Gets dealPipelineCreated
     *
     * @return int
     */
    public function getDealPipelineCreated()
    {
        return $this->container['dealPipelineCreated'];
    }

    /**
     * Sets dealPipelineCreated
     *
     * @param int $dealPipelineCreated dealPipelineCreated
     *
     * @return $this
     */
    public function setDealPipelineCreated($dealPipelineCreated)
    {
        $this->container['dealPipelineCreated'] = $dealPipelineCreated;

        return $this;
    }

    /**
     * Gets dealPipelineUpdated
     *
     * @return int
     */
    public function getDealPipelineUpdated()
    {
        return $this->container['dealPipelineUpdated'];
    }

    /**
     * Sets dealPipelineUpdated
     *
     * @param int $dealPipelineUpdated dealPipelineUpdated
     *
     * @return $this
     */
    public function setDealPipelineUpdated($dealPipelineUpdated)
    {
        $this->container['dealPipelineUpdated'] = $dealPipelineUpdated;

        return $this;
    }

    /**
     * Gets dealPipelineDeleted
     *
     * @return int
     */
    public function getDealPipelineDeleted()
    {
        return $this->container['dealPipelineDeleted'];
    }

    /**
     * Sets dealPipelineDeleted
     *
     * @param int $dealPipelineDeleted dealPipelineDeleted
     *
     * @return $this
     */
    public function setDealPipelineDeleted($dealPipelineDeleted)
    {
        $this->container['dealPipelineDeleted'] = $dealPipelineDeleted;

        return $this;
    }

    /**
     * Gets dealPipelineArchived
     *
     * @return int
     */
    public function getDealPipelineArchived()
    {
        return $this->container['dealPipelineArchived'];
    }

    /**
     * Sets dealPipelineArchived
     *
     * @param int $dealPipelineArchived dealPipelineArchived
     *
     * @return $this
     */
    public function setDealPipelineArchived($dealPipelineArchived)
    {
        $this->container['dealPipelineArchived'] = $dealPipelineArchived;

        return $this;
    }

    /**
     * Gets dealPipelineReordered
     *
     * @return int
     */
    public function getDealPipelineReordered()
    {
        return $this->container['dealPipelineReordered'];
    }

    /**
     * Sets dealPipelineReordered
     *
     * @param int $dealPipelineReordered dealPipelineReordered
     *
     * @return $this
     */
    public function setDealPipelineReordered($dealPipelineReordered)
    {
        $this->container['dealPipelineReordered'] = $dealPipelineReordered;

        return $this;
    }

    /**
     * Gets dealActivityUpdated
     *
     * @return int
     */
    public function getDealActivityUpdated()
    {
        return $this->container['dealActivityUpdated'];
    }

    /**
     * Sets dealActivityUpdated
     *
     * @param int $dealActivityUpdated dealActivityUpdated
     *
     * @return $this
     */
    public function setDealActivityUpdated($dealActivityUpdated)
    {
        $this->container['dealActivityUpdated'] = $dealActivityUpdated;

        return $this;
    }

    /**
     * Gets dealActivityItemCreated
     *
     * @return int
     */
    public function getDealActivityItemCreated()
    {
        return $this->container['dealActivityItemCreated'];
    }

    /**
     * Sets dealActivityItemCreated
     *
     * @param int $dealActivityItemCreated dealActivityItemCreated
     *
     * @return $this
     */
    public function setDealActivityItemCreated($dealActivityItemCreated)
    {
        $this->container['dealActivityItemCreated'] = $dealActivityItemCreated;

        return $this;
    }

    /**
     * Gets dealActivityItemUpdated
     *
     * @return int
     */
    public function getDealActivityItemUpdated()
    {
        return $this->container['dealActivityItemUpdated'];
    }

    /**
     * Sets dealActivityItemUpdated
     *
     * @param int $dealActivityItemUpdated dealActivityItemUpdated
     *
     * @return $this
     */
    public function setDealActivityItemUpdated($dealActivityItemUpdated)
    {
        $this->container['dealActivityItemUpdated'] = $dealActivityItemUpdated;

        return $this;
    }

    /**
     * Gets dealActivityItemDeleted
     *
     * @return int
     */
    public function getDealActivityItemDeleted()
    {
        return $this->container['dealActivityItemDeleted'];
    }

    /**
     * Sets dealActivityItemDeleted
     *
     * @param int $dealActivityItemDeleted dealActivityItemDeleted
     *
     * @return $this
     */
    public function setDealActivityItemDeleted($dealActivityItemDeleted)
    {
        $this->container['dealActivityItemDeleted'] = $dealActivityItemDeleted;

        return $this;
    }

    /**
     * Gets dealActivityItemBulkMarked
     *
     * @return int
     */
    public function getDealActivityItemBulkMarked()
    {
        return $this->container['dealActivityItemBulkMarked'];
    }

    /**
     * Sets dealActivityItemBulkMarked
     *
     * @param int $dealActivityItemBulkMarked dealActivityItemBulkMarked
     *
     * @return $this
     */
    public function setDealActivityItemBulkMarked($dealActivityItemBulkMarked)
    {
        $this->container['dealActivityItemBulkMarked'] = $dealActivityItemBulkMarked;

        return $this;
    }

    /**
     * Gets dealTimelineItemDeleted
     *
     * @return int
     */
    public function getDealTimelineItemDeleted()
    {
        return $this->container['dealTimelineItemDeleted'];
    }

    /**
     * Sets dealTimelineItemDeleted
     *
     * @param int $dealTimelineItemDeleted dealTimelineItemDeleted
     *
     * @return $this
     */
    public function setDealTimelineItemDeleted($dealTimelineItemDeleted)
    {
        $this->container['dealTimelineItemDeleted'] = $dealTimelineItemDeleted;

        return $this;
    }

    /**
     * Gets dealTimelineItemCreated
     *
     * @return int
     */
    public function getDealTimelineItemCreated()
    {
        return $this->container['dealTimelineItemCreated'];
    }

    /**
     * Sets dealTimelineItemCreated
     *
     * @param int $dealTimelineItemCreated dealTimelineItemCreated
     *
     * @return $this
     */
    public function setDealTimelineItemCreated($dealTimelineItemCreated)
    {
        $this->container['dealTimelineItemCreated'] = $dealTimelineItemCreated;

        return $this;
    }

    /**
     * Gets aIAssistantCreated
     *
     * @return int
     */
    public function getAIAssistantCreated()
    {
        return $this->container['aIAssistantCreated'];
    }

    /**
     * Sets aIAssistantCreated
     *
     * @param int $aIAssistantCreated aIAssistantCreated
     *
     * @return $this
     */
    public function setAIAssistantCreated($aIAssistantCreated)
    {
        $this->container['aIAssistantCreated'] = $aIAssistantCreated;

        return $this;
    }

    /**
     * Gets aIAssistantState
     *
     * @return int
     */
    public function getAIAssistantState()
    {
        return $this->container['aIAssistantState'];
    }

    /**
     * Sets aIAssistantState
     *
     * @param int $aIAssistantState aIAssistantState
     *
     * @return $this
     */
    public function setAIAssistantState($aIAssistantState)
    {
        $this->container['aIAssistantState'] = $aIAssistantState;

        return $this;
    }

    /**
     * Gets aIAssistantDeleted
     *
     * @return int
     */
    public function getAIAssistantDeleted()
    {
        return $this->container['aIAssistantDeleted'];
    }

    /**
     * Sets aIAssistantDeleted
     *
     * @param int $aIAssistantDeleted aIAssistantDeleted
     *
     * @return $this
     */
    public function setAIAssistantDeleted($aIAssistantDeleted)
    {
        $this->container['aIAssistantDeleted'] = $aIAssistantDeleted;

        return $this;
    }

    /**
     * Gets aIAssistantLinkDeleted
     *
     * @return int
     */
    public function getAIAssistantLinkDeleted()
    {
        return $this->container['aIAssistantLinkDeleted'];
    }

    /**
     * Sets aIAssistantLinkDeleted
     *
     * @param int $aIAssistantLinkDeleted aIAssistantLinkDeleted
     *
     * @return $this
     */
    public function setAIAssistantLinkDeleted($aIAssistantLinkDeleted)
    {
        $this->container['aIAssistantLinkDeleted'] = $aIAssistantLinkDeleted;

        return $this;
    }

    /**
     * Gets aIAssistantLinkState
     *
     * @return int
     */
    public function getAIAssistantLinkState()
    {
        return $this->container['aIAssistantLinkState'];
    }

    /**
     * Sets aIAssistantLinkState
     *
     * @param int $aIAssistantLinkState aIAssistantLinkState
     *
     * @return $this
     */
    public function setAIAssistantLinkState($aIAssistantLinkState)
    {
        $this->container['aIAssistantLinkState'] = $aIAssistantLinkState;

        return $this;
    }

    /**
     * Gets aIAssistantLinkCreated
     *
     * @return int
     */
    public function getAIAssistantLinkCreated()
    {
        return $this->container['aIAssistantLinkCreated'];
    }

    /**
     * Sets aIAssistantLinkCreated
     *
     * @param int $aIAssistantLinkCreated aIAssistantLinkCreated
     *
     * @return $this
     */
    public function setAIAssistantLinkCreated($aIAssistantLinkCreated)
    {
        $this->container['aIAssistantLinkCreated'] = $aIAssistantLinkCreated;

        return $this;
    }

    /**
     * Gets aIAssistantSubLinkState
     *
     * @return int
     */
    public function getAIAssistantSubLinkState()
    {
        return $this->container['aIAssistantSubLinkState'];
    }

    /**
     * Sets aIAssistantSubLinkState
     *
     * @param int $aIAssistantSubLinkState aIAssistantSubLinkState
     *
     * @return $this
     */
    public function setAIAssistantSubLinkState($aIAssistantSubLinkState)
    {
        $this->container['aIAssistantSubLinkState'] = $aIAssistantSubLinkState;

        return $this;
    }

    /**
     * Gets aIAssistantSubLinkCreated
     *
     * @return int
     */
    public function getAIAssistantSubLinkCreated()
    {
        return $this->container['aIAssistantSubLinkCreated'];
    }

    /**
     * Sets aIAssistantSubLinkCreated
     *
     * @param int $aIAssistantSubLinkCreated aIAssistantSubLinkCreated
     *
     * @return $this
     */
    public function setAIAssistantSubLinkCreated($aIAssistantSubLinkCreated)
    {
        $this->container['aIAssistantSubLinkCreated'] = $aIAssistantSubLinkCreated;

        return $this;
    }

    /**
     * Gets emailCampaignEmailSenderCreated
     *
     * @return int
     */
    public function getEmailCampaignEmailSenderCreated()
    {
        return $this->container['emailCampaignEmailSenderCreated'];
    }

    /**
     * Sets emailCampaignEmailSenderCreated
     *
     * @param int $emailCampaignEmailSenderCreated emailCampaignEmailSenderCreated
     *
     * @return $this
     */
    public function setEmailCampaignEmailSenderCreated($emailCampaignEmailSenderCreated)
    {
        $this->container['emailCampaignEmailSenderCreated'] = $emailCampaignEmailSenderCreated;

        return $this;
    }

    /**
     * Gets emailCampaignEmailSenderUpdated
     *
     * @return int
     */
    public function getEmailCampaignEmailSenderUpdated()
    {
        return $this->container['emailCampaignEmailSenderUpdated'];
    }

    /**
     * Sets emailCampaignEmailSenderUpdated
     *
     * @param int $emailCampaignEmailSenderUpdated emailCampaignEmailSenderUpdated
     *
     * @return $this
     */
    public function setEmailCampaignEmailSenderUpdated($emailCampaignEmailSenderUpdated)
    {
        $this->container['emailCampaignEmailSenderUpdated'] = $emailCampaignEmailSenderUpdated;

        return $this;
    }

    /**
     * Gets emailCampaignEmailSenderDeleted
     *
     * @return int
     */
    public function getEmailCampaignEmailSenderDeleted()
    {
        return $this->container['emailCampaignEmailSenderDeleted'];
    }

    /**
     * Sets emailCampaignEmailSenderDeleted
     *
     * @param int $emailCampaignEmailSenderDeleted emailCampaignEmailSenderDeleted
     *
     * @return $this
     */
    public function setEmailCampaignEmailSenderDeleted($emailCampaignEmailSenderDeleted)
    {
        $this->container['emailCampaignEmailSenderDeleted'] = $emailCampaignEmailSenderDeleted;

        return $this;
    }

    /**
     * Gets emailCampaignEmailSenderVerified
     *
     * @return int
     */
    public function getEmailCampaignEmailSenderVerified()
    {
        return $this->container['emailCampaignEmailSenderVerified'];
    }

    /**
     * Sets emailCampaignEmailSenderVerified
     *
     * @param int $emailCampaignEmailSenderVerified emailCampaignEmailSenderVerified
     *
     * @return $this
     */
    public function setEmailCampaignEmailSenderVerified($emailCampaignEmailSenderVerified)
    {
        $this->container['emailCampaignEmailSenderVerified'] = $emailCampaignEmailSenderVerified;

        return $this;
    }

    /**
     * Gets emailCampaignDomainCreated
     *
     * @return int
     */
    public function getEmailCampaignDomainCreated()
    {
        return $this->container['emailCampaignDomainCreated'];
    }

    /**
     * Sets emailCampaignDomainCreated
     *
     * @param int $emailCampaignDomainCreated emailCampaignDomainCreated
     *
     * @return $this
     */
    public function setEmailCampaignDomainCreated($emailCampaignDomainCreated)
    {
        $this->container['emailCampaignDomainCreated'] = $emailCampaignDomainCreated;

        return $this;
    }

    /**
     * Gets emailCampaignDomainDeleted
     *
     * @return int
     */
    public function getEmailCampaignDomainDeleted()
    {
        return $this->container['emailCampaignDomainDeleted'];
    }

    /**
     * Sets emailCampaignDomainDeleted
     *
     * @param int $emailCampaignDomainDeleted emailCampaignDomainDeleted
     *
     * @return $this
     */
    public function setEmailCampaignDomainDeleted($emailCampaignDomainDeleted)
    {
        $this->container['emailCampaignDomainDeleted'] = $emailCampaignDomainDeleted;

        return $this;
    }

    /**
     * Gets emailCampaignDomainVerified
     *
     * @return int
     */
    public function getEmailCampaignDomainVerified()
    {
        return $this->container['emailCampaignDomainVerified'];
    }

    /**
     * Sets emailCampaignDomainVerified
     *
     * @param int $emailCampaignDomainVerified emailCampaignDomainVerified
     *
     * @return $this
     */
    public function setEmailCampaignDomainVerified($emailCampaignDomainVerified)
    {
        $this->container['emailCampaignDomainVerified'] = $emailCampaignDomainVerified;

        return $this;
    }

    /**
     * Gets emailCampaignDomainDkimVerified
     *
     * @return int
     */
    public function getEmailCampaignDomainDkimVerified()
    {
        return $this->container['emailCampaignDomainDkimVerified'];
    }

    /**
     * Sets emailCampaignDomainDkimVerified
     *
     * @param int $emailCampaignDomainDkimVerified emailCampaignDomainDkimVerified
     *
     * @return $this
     */
    public function setEmailCampaignDomainDkimVerified($emailCampaignDomainDkimVerified)
    {
        $this->container['emailCampaignDomainDkimVerified'] = $emailCampaignDomainDkimVerified;

        return $this;
    }

    /**
     * Gets emailCampaignDomainReturnPathVerified
     *
     * @return int
     */
    public function getEmailCampaignDomainReturnPathVerified()
    {
        return $this->container['emailCampaignDomainReturnPathVerified'];
    }

    /**
     * Sets emailCampaignDomainReturnPathVerified
     *
     * @param int $emailCampaignDomainReturnPathVerified emailCampaignDomainReturnPathVerified
     *
     * @return $this
     */
    public function setEmailCampaignDomainReturnPathVerified($emailCampaignDomainReturnPathVerified)
    {
        $this->container['emailCampaignDomainReturnPathVerified'] = $emailCampaignDomainReturnPathVerified;

        return $this;
    }

    /**
     * Gets emailCampaignBulkProcessProgress
     *
     * @return int
     */
    public function getEmailCampaignBulkProcessProgress()
    {
        return $this->container['emailCampaignBulkProcessProgress'];
    }

    /**
     * Sets emailCampaignBulkProcessProgress
     *
     * @param int $emailCampaignBulkProcessProgress emailCampaignBulkProcessProgress
     *
     * @return $this
     */
    public function setEmailCampaignBulkProcessProgress($emailCampaignBulkProcessProgress)
    {
        $this->container['emailCampaignBulkProcessProgress'] = $emailCampaignBulkProcessProgress;

        return $this;
    }

    /**
     * Gets smsCampaignInvalidated
     *
     * @return int
     */
    public function getSmsCampaignInvalidated()
    {
        return $this->container['smsCampaignInvalidated'];
    }

    /**
     * Sets smsCampaignInvalidated
     *
     * @param int $smsCampaignInvalidated smsCampaignInvalidated
     *
     * @return $this
     */
    public function setSmsCampaignInvalidated($smsCampaignInvalidated)
    {
        $this->container['smsCampaignInvalidated'] = $smsCampaignInvalidated;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


